// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _SCIG_1_HH_
#define _SCIG_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "SCIG_1_inputBuf_V.h"

namespace ap_rtl {

struct SCIG_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;


    // Module declarations
    SCIG_1(sc_module_name name);
    SC_HAS_PROCESS(SCIG_1);

    ~SCIG_1();

    sc_trace_file* mVcdFile;

    SCIG_1_inputBuf_V* inputBuf_V_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond1_reg_708;
    sc_signal< sc_lv<1> > tmp_70_reg_717;
    sc_signal< sc_lv<1> > or_cond2_reg_721;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_699;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<1> > tmp_78_reg_725;
    sc_signal< sc_lv<1> > tmp_78_reg_725_pp1_iter2_reg;
    sc_signal< sc_lv<32> > i6_reg_157;
    sc_signal< sc_lv<32> > inp_reg_168;
    sc_signal< sc_lv<32> > i_reg_180;
    sc_signal< sc_lv<32> > inp_6_reg_201;
    sc_signal< sc_lv<1> > tmp_s_fu_249_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_608;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_V_84_reg_612;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > tmp_V_86_reg_617;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<32> > tmp_V_88_reg_623;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<32> > tmp_V_92_reg_628;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_lv<32> > tmp4_fu_255_p2;
    sc_signal< sc_lv<32> > tmp4_reg_633;
    sc_signal< bool > ap_block_state8;
    sc_signal< sc_lv<32> > tmp5_fu_259_p2;
    sc_signal< sc_lv<32> > tmp5_reg_638;
    sc_signal< sc_lv<32> > tmp_68_fu_268_p2;
    sc_signal< sc_lv<32> > tmp_68_reg_689;
    sc_signal< sc_lv<32> > KER_bound_fu_288_p2;
    sc_signal< sc_lv<32> > KER_bound_reg_694;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > exitcond_fu_292_p2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > i_5_fu_297_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond1_fu_303_p2;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter0;
    sc_signal< bool > ap_predicate_op145_read_state14;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state16_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<32> > i_6_fu_308_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > tmp_70_fu_321_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_365_p2;
    sc_signal< sc_lv<1> > tmp_78_fu_442_p2;
    sc_signal< sc_lv<1> > tmp_78_reg_725_pp1_iter1_reg;
    sc_signal< sc_lv<32> > ox_load_1_reg_729;
    sc_signal< sc_lv<32> > kx_load_reg_734;
    sc_signal< sc_lv<32> > tmp_fu_460_p2;
    sc_signal< sc_lv<32> > tmp_reg_739;
    sc_signal< sc_lv<1> > tmp_83_fu_472_p2;
    sc_signal< sc_lv<1> > tmp_84_fu_489_p2;
    sc_signal< sc_lv<1> > tmp_85_fu_509_p2;
    sc_signal< sc_lv<32> > tmp_79_fu_588_p2;
    sc_signal< sc_lv<32> > tmp_79_reg_757;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state10;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state13;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<14> > inputBuf_V_address0;
    sc_signal< sc_logic > inputBuf_V_ce0;
    sc_signal< sc_logic > inputBuf_V_we0;
    sc_signal< sc_lv<14> > inputBuf_V_address1;
    sc_signal< sc_logic > inputBuf_V_ce1;
    sc_signal< sc_lv<8> > inputBuf_V_q1;
    sc_signal< sc_lv<32> > ap_phi_mux_inp_phi_fu_172_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_inp_1_phi_fu_194_p4;
    sc_signal< sc_lv<32> > inp_2_fu_377_p2;
    sc_signal< sc_lv<32> > ap_phi_reg_pp1_iter0_inp_1_reg_191;
    sc_signal< sc_lv<32> > p_inp_1_fu_535_p3;
    sc_signal< sc_lv<32> > ap_phi_reg_pp1_iter0_inp_6_reg_201;
    sc_signal< sc_lv<8> > ap_phi_mux_storemerge_phi_fu_226_p4;
    sc_signal< sc_lv<8> > tmp_82_fu_557_p1;
    sc_signal< sc_lv<8> > ap_phi_reg_pp1_iter1_storemerge_reg_222;
    sc_signal< sc_lv<8> > ap_phi_reg_pp1_iter0_storemerge_reg_222;
    sc_signal< sc_lv<64> > tmp_75_fu_562_p1;
    sc_signal< sc_lv<64> > tmp_80_fu_593_p1;
    sc_signal< bool > ap_block_state5;
    sc_signal< bool > ap_block_state7;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > inElem_V_fu_597_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<11> > IFMPadDimSqrt_fu_88;
    sc_signal< sc_lv<32> > oy_fu_96;
    sc_signal< sc_lv<32> > p_2_fu_544_p3;
    sc_signal< sc_lv<32> > ox_fu_100;
    sc_signal< sc_lv<32> > ox_1_fu_503_p2;
    sc_signal< sc_lv<32> > ky_fu_104;
    sc_signal< sc_lv<32> > ky_1_fu_483_p2;
    sc_signal< sc_lv<32> > inp_j_fu_108;
    sc_signal< sc_lv<32> > inp_j_1_fu_424_p3;
    sc_signal< sc_lv<32> > inp_i_fu_112;
    sc_signal< sc_lv<32> > inp_i_2_fu_416_p3;
    sc_signal< sc_lv<32> > kx_fu_116;
    sc_signal< sc_lv<32> > kx_1_fu_466_p2;
    sc_signal< sc_lv<32> > extLd_fu_317_p1;
    sc_signal< sc_lv<32> > tmp_72_fu_333_p2;
    sc_signal< sc_lv<1> > tmp_73_fu_347_p2;
    sc_signal< sc_lv<1> > tmp_74_fu_353_p2;
    sc_signal< sc_lv<1> > tmp1_fu_359_p2;
    sc_signal< sc_lv<1> > tmp_81_fu_339_p3;
    sc_signal< sc_lv<32> > inp_j_2_fu_384_p2;
    sc_signal< sc_lv<32> > inp_i_1_fu_396_p2;
    sc_signal< sc_lv<1> > tmp_77_fu_402_p2;
    sc_signal< sc_lv<1> > tmp_76_fu_390_p2;
    sc_signal< sc_lv<32> > p_s_fu_408_p3;
    sc_signal< sc_lv<32> > oy_1_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_86_fu_529_p2;
    sc_signal< sc_lv<32> > tmp_89_fu_567_p2;
    sc_signal< sc_lv<32> > tmp_90_fu_572_p2;
    sc_signal< sc_lv<32> > tmp2_fu_577_p2;
    sc_signal< sc_lv<32> > tmp3_fu_583_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0;
    sc_signal< bool > ap_block_pp1;
    sc_signal< bool > ap_predicate_op151_store_state14;
    sc_signal< bool > ap_enable_operation_151;
    sc_signal< bool > ap_enable_state14_pp1_iter1_stage0;
    sc_signal< bool > ap_enable_operation_159;
    sc_signal< bool > ap_enable_state15_pp1_iter2_stage0;
    sc_signal< bool > ap_enable_operation_160;
    sc_signal< bool > ap_enable_state16_pp1_iter3_stage0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_437;
    sc_signal< bool > ap_condition_393;
    sc_signal< bool > ap_condition_250;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_pp1_stage0;
    static const sc_lv<13> ap_ST_fsm_state17;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<11> ap_const_lv11_310;
    static const sc_lv<32> ap_const_lv32_38E8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_A8;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IFMPadDimSqrt_fu_88();
    void thread_KER_bound_fu_288_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state13_pp1_stage0_iter0();
    void thread_ap_block_state14_pp1_stage0_iter1();
    void thread_ap_block_state15_pp1_stage0_iter2();
    void thread_ap_block_state16_pp1_stage0_iter3();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state5();
    void thread_ap_block_state6();
    void thread_ap_block_state7();
    void thread_ap_block_state8();
    void thread_ap_condition_250();
    void thread_ap_condition_393();
    void thread_ap_condition_437();
    void thread_ap_condition_pp0_exit_iter0_state10();
    void thread_ap_condition_pp1_exit_iter0_state13();
    void thread_ap_done();
    void thread_ap_enable_operation_151();
    void thread_ap_enable_operation_159();
    void thread_ap_enable_operation_160();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_state14_pp1_iter1_stage0();
    void thread_ap_enable_state15_pp1_iter2_stage0();
    void thread_ap_enable_state16_pp1_iter3_stage0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_inp_1_phi_fu_194_p4();
    void thread_ap_phi_mux_inp_phi_fu_172_p4();
    void thread_ap_phi_mux_storemerge_phi_fu_226_p4();
    void thread_ap_phi_reg_pp1_iter0_inp_1_reg_191();
    void thread_ap_phi_reg_pp1_iter0_inp_6_reg_201();
    void thread_ap_phi_reg_pp1_iter0_storemerge_reg_222();
    void thread_ap_predicate_op145_read_state14();
    void thread_ap_predicate_op151_store_state14();
    void thread_ap_ready();
    void thread_exitcond1_fu_303_p2();
    void thread_exitcond_fu_292_p2();
    void thread_extLd_fu_317_p1();
    void thread_i_5_fu_297_p2();
    void thread_i_6_fu_308_p2();
    void thread_inElem_V_fu_597_p1();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_inp_2_fu_377_p2();
    void thread_inp_i_1_fu_396_p2();
    void thread_inp_i_2_fu_416_p3();
    void thread_inp_j_1_fu_424_p3();
    void thread_inp_j_2_fu_384_p2();
    void thread_inputBuf_V_address0();
    void thread_inputBuf_V_address1();
    void thread_inputBuf_V_ce0();
    void thread_inputBuf_V_ce1();
    void thread_inputBuf_V_we0();
    void thread_internal_ap_ready();
    void thread_kx_1_fu_466_p2();
    void thread_ky_1_fu_483_p2();
    void thread_or_cond2_fu_365_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_ox_1_fu_503_p2();
    void thread_oy_1_fu_523_p2();
    void thread_p_2_fu_544_p3();
    void thread_p_inp_1_fu_535_p3();
    void thread_p_s_fu_408_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_359_p2();
    void thread_tmp2_fu_577_p2();
    void thread_tmp3_fu_583_p2();
    void thread_tmp4_fu_255_p2();
    void thread_tmp5_fu_259_p2();
    void thread_tmp_68_fu_268_p2();
    void thread_tmp_70_fu_321_p2();
    void thread_tmp_72_fu_333_p2();
    void thread_tmp_73_fu_347_p2();
    void thread_tmp_74_fu_353_p2();
    void thread_tmp_75_fu_562_p1();
    void thread_tmp_76_fu_390_p2();
    void thread_tmp_77_fu_402_p2();
    void thread_tmp_78_fu_442_p2();
    void thread_tmp_79_fu_588_p2();
    void thread_tmp_80_fu_593_p1();
    void thread_tmp_81_fu_339_p3();
    void thread_tmp_82_fu_557_p1();
    void thread_tmp_83_fu_472_p2();
    void thread_tmp_84_fu_489_p2();
    void thread_tmp_85_fu_509_p2();
    void thread_tmp_86_fu_529_p2();
    void thread_tmp_89_fu_567_p2();
    void thread_tmp_90_fu_572_p2();
    void thread_tmp_fu_460_p2();
    void thread_tmp_s_fu_249_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

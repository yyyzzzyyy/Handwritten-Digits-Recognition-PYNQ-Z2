// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _lenet_HH_
#define _lenet_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AXI_DMA_SLAVE.h"
#include "SCIG_1.h"
#include "SMM_1u_25u_20u_s.h"
#include "pool_2u_20u_24u_s.h"
#include "SCIG.h"
#include "SMM_1u_500u_50u_s.h"
#include "pool_2u_50u_8u_s.h"
#include "FC_1u_800u_500u_s.h"
#include "FC_1u_500u_10u_s.h"
#include "AXI_DMA_MASTER.h"
#include "fifo_w32_d50_A.h"
#include "fifo_w32_d2_A.h"
#include "start_for_SCIG_1_U0.h"
#include "start_for_SMM_1u_c7D.h"
#include "start_for_pool_2uc8D.h"
#include "start_for_SCIG_U0.h"
#include "start_for_SMM_1u_c9D.h"
#include "start_for_pool_2udaE.h"
#include "start_for_FC_1u_8dbE.h"
#include "start_for_FC_1u_5dcE.h"
#include "start_for_AXI_DMAddE.h"

namespace ap_rtl {

struct lenet : public sc_module {
    // Port declarations 10
    sc_in< sc_lv<32> > in_stream_TDATA;
    sc_in< sc_logic > in_stream_TLAST;
    sc_out< sc_lv<32> > out_stream_TDATA;
    sc_out< sc_logic > out_stream_TLAST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > in_stream_TVALID;
    sc_out< sc_logic > in_stream_TREADY;
    sc_out< sc_logic > out_stream_TVALID;
    sc_in< sc_logic > out_stream_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    lenet(sc_module_name name);
    SC_HAS_PROCESS(lenet);

    ~lenet();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AXI_DMA_SLAVE* AXI_DMA_SLAVE_U0;
    SCIG_1* SCIG_1_U0;
    SMM_1u_25u_20u_s* SMM_1u_25u_20u_U0;
    pool_2u_20u_24u_s* pool_2u_20u_24u_U0;
    SCIG* SCIG_U0;
    SMM_1u_500u_50u_s* SMM_1u_500u_50u_U0;
    pool_2u_50u_8u_s* pool_2u_50u_8u_U0;
    FC_1u_800u_500u_s* FC_1u_800u_500u_U0;
    FC_1u_500u_10u_s* FC_1u_500u_10u_U0;
    AXI_DMA_MASTER* AXI_DMA_MASTER_U0;
    fifo_w32_d50_A* connect_0_V_V_U;
    fifo_w32_d50_A* connect_1_V_V_U;
    fifo_w32_d2_A* connect_2_V_V_U;
    fifo_w32_d50_A* connect_3_V_V_U;
    fifo_w32_d50_A* connect_4_V_V_U;
    fifo_w32_d2_A* connect_5_V_V_U;
    fifo_w32_d50_A* connect_6_V_V_U;
    fifo_w32_d50_A* connect_7_V_V_U;
    fifo_w32_d50_A* connect_8_V_V_U;
    start_for_SCIG_1_U0* start_for_SCIG_1_U0_U;
    start_for_SMM_1u_c7D* start_for_SMM_1u_c7D_U;
    start_for_pool_2uc8D* start_for_pool_2uc8D_U;
    start_for_SCIG_U0* start_for_SCIG_U0_U;
    start_for_SMM_1u_c9D* start_for_SMM_1u_c9D_U;
    start_for_pool_2udaE* start_for_pool_2udaE_U;
    start_for_FC_1u_8dbE* start_for_FC_1u_8dbE_U;
    start_for_FC_1u_5dcE* start_for_FC_1u_5dcE_U;
    start_for_AXI_DMAddE* start_for_AXI_DMAddE_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_start;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_done;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_continue;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_idle;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_ready;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_start_out;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_start_write;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_in_stream_TREADY;
    sc_signal< sc_lv<32> > AXI_DMA_SLAVE_U0_out_stream_V_V_din;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_out_stream_V_V_write;
    sc_signal< sc_logic > SCIG_1_U0_ap_start;
    sc_signal< sc_logic > SCIG_1_U0_ap_done;
    sc_signal< sc_logic > SCIG_1_U0_ap_continue;
    sc_signal< sc_logic > SCIG_1_U0_ap_idle;
    sc_signal< sc_logic > SCIG_1_U0_ap_ready;
    sc_signal< sc_logic > SCIG_1_U0_start_out;
    sc_signal< sc_logic > SCIG_1_U0_start_write;
    sc_signal< sc_logic > SCIG_1_U0_in_V_V_read;
    sc_signal< sc_lv<32> > SCIG_1_U0_out_V_V_din;
    sc_signal< sc_logic > SCIG_1_U0_out_V_V_write;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_ap_start;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_ap_done;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_ap_continue;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_ap_idle;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_ap_ready;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_start_out;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_start_write;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_in_stream_a_V_V_read;
    sc_signal< sc_lv<32> > SMM_1u_25u_20u_U0_out_stream_V_V_din;
    sc_signal< sc_logic > SMM_1u_25u_20u_U0_out_stream_V_V_write;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_ap_start;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_ap_done;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_ap_continue;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_ap_idle;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_ap_ready;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_start_out;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_start_write;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_in_V_V_read;
    sc_signal< sc_lv<32> > pool_2u_20u_24u_U0_out_V_V_din;
    sc_signal< sc_logic > pool_2u_20u_24u_U0_out_V_V_write;
    sc_signal< sc_logic > SCIG_U0_ap_start;
    sc_signal< sc_logic > SCIG_U0_ap_done;
    sc_signal< sc_logic > SCIG_U0_ap_continue;
    sc_signal< sc_logic > SCIG_U0_ap_idle;
    sc_signal< sc_logic > SCIG_U0_ap_ready;
    sc_signal< sc_logic > SCIG_U0_start_out;
    sc_signal< sc_logic > SCIG_U0_start_write;
    sc_signal< sc_logic > SCIG_U0_in_V_V_read;
    sc_signal< sc_lv<32> > SCIG_U0_out_V_V_din;
    sc_signal< sc_logic > SCIG_U0_out_V_V_write;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_ap_start;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_ap_done;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_ap_continue;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_ap_idle;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_ap_ready;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_start_out;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_start_write;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_in_stream_a_V_V_read;
    sc_signal< sc_lv<32> > SMM_1u_500u_50u_U0_out_stream_V_V_din;
    sc_signal< sc_logic > SMM_1u_500u_50u_U0_out_stream_V_V_write;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_ap_start;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_ap_done;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_ap_continue;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_ap_idle;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_ap_ready;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_start_out;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_start_write;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_in_V_V_read;
    sc_signal< sc_lv<32> > pool_2u_50u_8u_U0_out_V_V_din;
    sc_signal< sc_logic > pool_2u_50u_8u_U0_out_V_V_write;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_ap_start;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_ap_done;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_ap_continue;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_ap_idle;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_ap_ready;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_start_out;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_start_write;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_in_stream_a_V_V_read;
    sc_signal< sc_lv<32> > FC_1u_800u_500u_U0_out_stream_V_V_din;
    sc_signal< sc_logic > FC_1u_800u_500u_U0_out_stream_V_V_write;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_ap_start;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_ap_done;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_ap_continue;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_ap_idle;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_ap_ready;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_start_out;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_start_write;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_in_stream_a_V_V_read;
    sc_signal< sc_lv<32> > FC_1u_500u_10u_U0_out_stream_V_V_din;
    sc_signal< sc_logic > FC_1u_500u_10u_U0_out_stream_V_V_write;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_start;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_done;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_continue;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_idle;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_ready;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_in_stream_V_V_read;
    sc_signal< sc_lv<32> > AXI_DMA_MASTER_U0_out_stream_TDATA;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_out_stream_TVALID;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_out_stream_TLAST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > connect_0_V_V_full_n;
    sc_signal< sc_lv<32> > connect_0_V_V_dout;
    sc_signal< sc_logic > connect_0_V_V_empty_n;
    sc_signal< sc_logic > connect_1_V_V_full_n;
    sc_signal< sc_lv<32> > connect_1_V_V_dout;
    sc_signal< sc_logic > connect_1_V_V_empty_n;
    sc_signal< sc_logic > connect_2_V_V_full_n;
    sc_signal< sc_lv<32> > connect_2_V_V_dout;
    sc_signal< sc_logic > connect_2_V_V_empty_n;
    sc_signal< sc_logic > connect_3_V_V_full_n;
    sc_signal< sc_lv<32> > connect_3_V_V_dout;
    sc_signal< sc_logic > connect_3_V_V_empty_n;
    sc_signal< sc_logic > connect_4_V_V_full_n;
    sc_signal< sc_lv<32> > connect_4_V_V_dout;
    sc_signal< sc_logic > connect_4_V_V_empty_n;
    sc_signal< sc_logic > connect_5_V_V_full_n;
    sc_signal< sc_lv<32> > connect_5_V_V_dout;
    sc_signal< sc_logic > connect_5_V_V_empty_n;
    sc_signal< sc_logic > connect_6_V_V_full_n;
    sc_signal< sc_lv<32> > connect_6_V_V_dout;
    sc_signal< sc_logic > connect_6_V_V_empty_n;
    sc_signal< sc_logic > connect_7_V_V_full_n;
    sc_signal< sc_lv<32> > connect_7_V_V_dout;
    sc_signal< sc_logic > connect_7_V_V_empty_n;
    sc_signal< sc_logic > connect_8_V_V_full_n;
    sc_signal< sc_lv<32> > connect_8_V_V_dout;
    sc_signal< sc_logic > connect_8_V_V_empty_n;
    sc_signal< sc_lv<1> > start_for_SCIG_1_U0_din;
    sc_signal< sc_logic > start_for_SCIG_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_SCIG_1_U0_dout;
    sc_signal< sc_logic > start_for_SCIG_1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_SMM_1u_25u_20u_U0_din;
    sc_signal< sc_logic > start_for_SMM_1u_25u_20u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_SMM_1u_25u_20u_U0_dout;
    sc_signal< sc_logic > start_for_SMM_1u_25u_20u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_pool_2u_20u_24u_U0_din;
    sc_signal< sc_logic > start_for_pool_2u_20u_24u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_pool_2u_20u_24u_U0_dout;
    sc_signal< sc_logic > start_for_pool_2u_20u_24u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_SCIG_U0_din;
    sc_signal< sc_logic > start_for_SCIG_U0_full_n;
    sc_signal< sc_lv<1> > start_for_SCIG_U0_dout;
    sc_signal< sc_logic > start_for_SCIG_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_SMM_1u_500u_50u_U0_din;
    sc_signal< sc_logic > start_for_SMM_1u_500u_50u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_SMM_1u_500u_50u_U0_dout;
    sc_signal< sc_logic > start_for_SMM_1u_500u_50u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_pool_2u_50u_8u_U0_din;
    sc_signal< sc_logic > start_for_pool_2u_50u_8u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_pool_2u_50u_8u_U0_dout;
    sc_signal< sc_logic > start_for_pool_2u_50u_8u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_FC_1u_800u_500u_U0_din;
    sc_signal< sc_logic > start_for_FC_1u_800u_500u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_FC_1u_800u_500u_U0_dout;
    sc_signal< sc_logic > start_for_FC_1u_800u_500u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_FC_1u_500u_10u_U0_din;
    sc_signal< sc_logic > start_for_FC_1u_500u_10u_U0_full_n;
    sc_signal< sc_lv<1> > start_for_FC_1u_500u_10u_U0_dout;
    sc_signal< sc_logic > start_for_FC_1u_500u_10u_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_AXI_DMA_MASTER_U0_din;
    sc_signal< sc_logic > start_for_AXI_DMA_MASTER_U0_full_n;
    sc_signal< sc_lv<1> > start_for_AXI_DMA_MASTER_U0_dout;
    sc_signal< sc_logic > start_for_AXI_DMA_MASTER_U0_empty_n;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_start_full_n;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_start_write;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXI_DMA_MASTER_U0_ap_continue();
    void thread_AXI_DMA_MASTER_U0_ap_start();
    void thread_AXI_DMA_MASTER_U0_start_full_n();
    void thread_AXI_DMA_MASTER_U0_start_write();
    void thread_AXI_DMA_SLAVE_U0_ap_continue();
    void thread_AXI_DMA_SLAVE_U0_ap_start();
    void thread_FC_1u_500u_10u_U0_ap_continue();
    void thread_FC_1u_500u_10u_U0_ap_start();
    void thread_FC_1u_800u_500u_U0_ap_continue();
    void thread_FC_1u_800u_500u_U0_ap_start();
    void thread_SCIG_1_U0_ap_continue();
    void thread_SCIG_1_U0_ap_start();
    void thread_SCIG_U0_ap_continue();
    void thread_SCIG_U0_ap_start();
    void thread_SMM_1u_25u_20u_U0_ap_continue();
    void thread_SMM_1u_25u_20u_U0_ap_start();
    void thread_SMM_1u_500u_50u_U0_ap_continue();
    void thread_SMM_1u_500u_50u_U0_ap_start();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_in_stream_TREADY();
    void thread_out_stream_TDATA();
    void thread_out_stream_TLAST();
    void thread_out_stream_TVALID();
    void thread_pool_2u_20u_24u_U0_ap_continue();
    void thread_pool_2u_20u_24u_U0_ap_start();
    void thread_pool_2u_50u_8u_U0_ap_continue();
    void thread_pool_2u_50u_8u_U0_ap_start();
    void thread_start_for_AXI_DMA_MASTER_U0_din();
    void thread_start_for_FC_1u_500u_10u_U0_din();
    void thread_start_for_FC_1u_800u_500u_U0_din();
    void thread_start_for_SCIG_1_U0_din();
    void thread_start_for_SCIG_U0_din();
    void thread_start_for_SMM_1u_25u_20u_U0_din();
    void thread_start_for_SMM_1u_500u_50u_U0_din();
    void thread_start_for_pool_2u_20u_24u_U0_din();
    void thread_start_for_pool_2u_50u_8u_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

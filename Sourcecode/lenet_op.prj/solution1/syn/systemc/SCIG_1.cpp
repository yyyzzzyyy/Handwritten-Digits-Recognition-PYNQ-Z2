// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SCIG_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SCIG_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SCIG_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> SCIG_1::ap_ST_fsm_state1 = "1";
const sc_lv<13> SCIG_1::ap_ST_fsm_state2 = "10";
const sc_lv<13> SCIG_1::ap_ST_fsm_state3 = "100";
const sc_lv<13> SCIG_1::ap_ST_fsm_state4 = "1000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state5 = "10000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state6 = "100000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_pp0_stage0 = "1000000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state12 = "10000000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_pp1_stage0 = "100000000000";
const sc_lv<13> SCIG_1::ap_ST_fsm_state17 = "1000000000000";
const bool SCIG_1::ap_const_boolean_1 = true;
const sc_lv<32> SCIG_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> SCIG_1::ap_const_lv32_1 = "1";
const sc_lv<32> SCIG_1::ap_const_lv32_2 = "10";
const sc_lv<32> SCIG_1::ap_const_lv32_3 = "11";
const sc_lv<32> SCIG_1::ap_const_lv32_4 = "100";
const sc_lv<32> SCIG_1::ap_const_lv32_5 = "101";
const sc_lv<32> SCIG_1::ap_const_lv32_6 = "110";
const sc_lv<32> SCIG_1::ap_const_lv32_7 = "111";
const sc_lv<32> SCIG_1::ap_const_lv32_B = "1011";
const bool SCIG_1::ap_const_boolean_0 = false;
const sc_lv<1> SCIG_1::ap_const_lv1_0 = "0";
const sc_lv<1> SCIG_1::ap_const_lv1_1 = "1";
const sc_lv<32> SCIG_1::ap_const_lv32_9 = "1001";
const sc_lv<32> SCIG_1::ap_const_lv32_8 = "1000";
const sc_lv<8> SCIG_1::ap_const_lv8_0 = "00000000";
const sc_lv<11> SCIG_1::ap_const_lv11_310 = "1100010000";
const sc_lv<32> SCIG_1::ap_const_lv32_38E8 = "11100011101000";
const sc_lv<32> SCIG_1::ap_const_lv32_1F = "11111";
const sc_lv<32> SCIG_1::ap_const_lv32_1B = "11011";
const sc_lv<32> SCIG_1::ap_const_lv32_1C = "11100";
const sc_lv<32> SCIG_1::ap_const_lv32_A8 = "10101000";
const sc_lv<32> SCIG_1::ap_const_lv32_18 = "11000";
const sc_lv<32> SCIG_1::ap_const_lv32_A = "1010";

SCIG_1::SCIG_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inputBuf_V_U = new SCIG_1_inputBuf_V("inputBuf_V_U");
    inputBuf_V_U->clk(ap_clk);
    inputBuf_V_U->reset(ap_rst);
    inputBuf_V_U->address0(inputBuf_V_address0);
    inputBuf_V_U->ce0(inputBuf_V_ce0);
    inputBuf_V_U->we0(inputBuf_V_we0);
    inputBuf_V_U->d0(ap_phi_mux_storemerge_phi_fu_226_p4);
    inputBuf_V_U->address1(inputBuf_V_address1);
    inputBuf_V_U->ce1(inputBuf_V_ce1);
    inputBuf_V_U->q1(inputBuf_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IFMPadDimSqrt_fu_88);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_s_reg_608 );

    SC_METHOD(thread_KER_bound_fu_288_p2);
    sensitive << ( tmp4_reg_633 );
    sensitive << ( tmp5_reg_638 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );

    SC_METHOD(thread_ap_block_pp1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp1_stage0_subdone );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );
    sensitive << ( ap_predicate_op145_read_state14 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );
    sensitive << ( ap_predicate_op145_read_state14 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );
    sensitive << ( ap_predicate_op145_read_state14 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( exitcond_reg_699 );

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_predicate_op145_read_state14 );

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter3);
    sensitive << ( out_V_V_full_n );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_condition_250);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_condition_393);
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( or_cond2_fu_365_p2 );

    SC_METHOD(thread_ap_condition_437);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state10);
    sensitive << ( exitcond_fu_292_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state13);
    sensitive << ( exitcond1_fu_303_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_operation_151);
    sensitive << ( ap_predicate_op151_store_state14 );

    SC_METHOD(thread_ap_enable_operation_159);
    sensitive << ( tmp_78_reg_725_pp1_iter1_reg );

    SC_METHOD(thread_ap_enable_operation_160);
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_state14_pp1_iter1_stage0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_enable_state15_pp1_iter2_stage0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_enable_state16_pp1_iter3_stage0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_phi_mux_inp_1_phi_fu_194_p4);
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( ap_phi_mux_inp_phi_fu_172_p4 );
    sensitive << ( inp_2_fu_377_p2 );
    sensitive << ( ap_phi_reg_pp1_iter0_inp_1_reg_191 );
    sensitive << ( ap_condition_437 );

    SC_METHOD(thread_ap_phi_mux_inp_phi_fu_172_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( inp_reg_168 );
    sensitive << ( inp_6_reg_201 );

    SC_METHOD(thread_ap_phi_mux_storemerge_phi_fu_226_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( tmp_70_reg_717 );
    sensitive << ( or_cond2_reg_721 );
    sensitive << ( tmp_82_fu_557_p1 );
    sensitive << ( ap_phi_reg_pp1_iter1_storemerge_reg_222 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_inp_1_reg_191);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_inp_6_reg_201);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_storemerge_reg_222);

    SC_METHOD(thread_ap_predicate_op145_read_state14);
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( tmp_70_reg_717 );
    sensitive << ( or_cond2_reg_721 );

    SC_METHOD(thread_ap_predicate_op151_store_state14);
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( tmp_70_reg_717 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond1_fu_303_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_reg_180 );
    sensitive << ( tmp_68_reg_689 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_292_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i6_reg_157 );
    sensitive << ( KER_bound_reg_694 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_extLd_fu_317_p1);
    sensitive << ( IFMPadDimSqrt_fu_88 );

    SC_METHOD(thread_i_5_fu_297_p2);
    sensitive << ( i6_reg_157 );

    SC_METHOD(thread_i_6_fu_308_p2);
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_inElem_V_fu_597_p1);
    sensitive << ( inputBuf_V_q1 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( tmp_70_reg_717 );
    sensitive << ( or_cond2_reg_721 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_699 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_predicate_op145_read_state14 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_inp_2_fu_377_p2);
    sensitive << ( ap_phi_mux_inp_phi_fu_172_p4 );

    SC_METHOD(thread_inp_i_1_fu_396_p2);
    sensitive << ( inp_i_fu_112 );

    SC_METHOD(thread_inp_i_2_fu_416_p3);
    sensitive << ( inp_i_fu_112 );
    sensitive << ( tmp_76_fu_390_p2 );
    sensitive << ( p_s_fu_408_p3 );

    SC_METHOD(thread_inp_j_1_fu_424_p3);
    sensitive << ( inp_j_2_fu_384_p2 );
    sensitive << ( tmp_76_fu_390_p2 );

    SC_METHOD(thread_inp_j_2_fu_384_p2);
    sensitive << ( inp_j_fu_108 );

    SC_METHOD(thread_inputBuf_V_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_75_fu_562_p1 );

    SC_METHOD(thread_inputBuf_V_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( tmp_80_fu_593_p1 );

    SC_METHOD(thread_inputBuf_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_inputBuf_V_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_inputBuf_V_we0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond1_reg_708 );
    sensitive << ( tmp_70_reg_717 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_kx_1_fu_466_p2);
    sensitive << ( kx_fu_116 );

    SC_METHOD(thread_ky_1_fu_483_p2);
    sensitive << ( ky_fu_104 );

    SC_METHOD(thread_or_cond2_fu_365_p2);
    sensitive << ( tmp1_fu_359_p2 );
    sensitive << ( tmp_81_fu_339_p3 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_699 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_dout );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( inElem_V_fu_597_p1 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_699 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_78_reg_725_pp1_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ox_1_fu_503_p2);
    sensitive << ( ox_fu_100 );

    SC_METHOD(thread_oy_1_fu_523_p2);
    sensitive << ( oy_fu_96 );

    SC_METHOD(thread_p_2_fu_544_p3);
    sensitive << ( oy_1_fu_523_p2 );
    sensitive << ( tmp_86_fu_529_p2 );

    SC_METHOD(thread_p_inp_1_fu_535_p3);
    sensitive << ( ap_phi_mux_inp_1_phi_fu_194_p4 );
    sensitive << ( tmp_86_fu_529_p2 );

    SC_METHOD(thread_p_s_fu_408_p3);
    sensitive << ( inp_i_1_fu_396_p2 );
    sensitive << ( tmp_77_fu_402_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp1_fu_359_p2);
    sensitive << ( tmp_73_fu_347_p2 );
    sensitive << ( tmp_74_fu_353_p2 );

    SC_METHOD(thread_tmp2_fu_577_p2);
    sensitive << ( tmp_89_fu_567_p2 );
    sensitive << ( tmp_90_fu_572_p2 );

    SC_METHOD(thread_tmp3_fu_583_p2);
    sensitive << ( kx_load_reg_734 );
    sensitive << ( tmp2_fu_577_p2 );

    SC_METHOD(thread_tmp4_fu_255_p2);
    sensitive << ( tmp_V_86_reg_617 );

    SC_METHOD(thread_tmp5_fu_259_p2);
    sensitive << ( tmp_V_88_reg_623 );
    sensitive << ( tmp_V_92_reg_628 );

    SC_METHOD(thread_tmp_68_fu_268_p2);
    sensitive << ( tmp_V_84_reg_612 );

    SC_METHOD(thread_tmp_70_fu_321_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_inp_phi_fu_172_p4 );
    sensitive << ( extLd_fu_317_p1 );

    SC_METHOD(thread_tmp_72_fu_333_p2);
    sensitive << ( inp_j_fu_108 );
    sensitive << ( inp_i_fu_112 );

    SC_METHOD(thread_tmp_73_fu_347_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( inp_i_fu_112 );

    SC_METHOD(thread_tmp_74_fu_353_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( inp_j_fu_108 );

    SC_METHOD(thread_tmp_75_fu_562_p1);
    sensitive << ( inp_reg_168 );

    SC_METHOD(thread_tmp_76_fu_390_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( inp_j_2_fu_384_p2 );

    SC_METHOD(thread_tmp_77_fu_402_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_70_fu_321_p2 );
    sensitive << ( inp_i_1_fu_396_p2 );

    SC_METHOD(thread_tmp_78_fu_442_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_inp_1_phi_fu_194_p4 );

    SC_METHOD(thread_tmp_79_fu_588_p2);
    sensitive << ( ox_load_1_reg_729 );
    sensitive << ( tmp3_fu_583_p2 );

    SC_METHOD(thread_tmp_80_fu_593_p1);
    sensitive << ( tmp_79_reg_757 );

    SC_METHOD(thread_tmp_81_fu_339_p3);
    sensitive << ( tmp_72_fu_333_p2 );

    SC_METHOD(thread_tmp_82_fu_557_p1);
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_tmp_83_fu_472_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_78_fu_442_p2 );
    sensitive << ( kx_1_fu_466_p2 );

    SC_METHOD(thread_tmp_84_fu_489_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_78_fu_442_p2 );
    sensitive << ( tmp_83_fu_472_p2 );
    sensitive << ( ky_1_fu_483_p2 );

    SC_METHOD(thread_tmp_85_fu_509_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_78_fu_442_p2 );
    sensitive << ( tmp_83_fu_472_p2 );
    sensitive << ( tmp_84_fu_489_p2 );
    sensitive << ( ox_1_fu_503_p2 );

    SC_METHOD(thread_tmp_86_fu_529_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_78_fu_442_p2 );
    sensitive << ( tmp_83_fu_472_p2 );
    sensitive << ( tmp_84_fu_489_p2 );
    sensitive << ( tmp_85_fu_509_p2 );
    sensitive << ( oy_1_fu_523_p2 );

    SC_METHOD(thread_tmp_89_fu_567_p2);
    sensitive << ( tmp_reg_739 );

    SC_METHOD(thread_tmp_90_fu_572_p2);
    sensitive << ( tmp_reg_739 );

    SC_METHOD(thread_tmp_fu_460_p2);
    sensitive << ( oy_fu_96 );
    sensitive << ( ky_fu_104 );

    SC_METHOD(thread_tmp_s_fu_249_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_dout );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( tmp_s_reg_608 );
    sensitive << ( exitcond_fu_292_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_303_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SCIG_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond1_reg_708, "exitcond1_reg_708");
    sc_trace(mVcdFile, tmp_70_reg_717, "tmp_70_reg_717");
    sc_trace(mVcdFile, or_cond2_reg_721, "or_cond2_reg_721");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_699, "exitcond_reg_699");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, tmp_78_reg_725, "tmp_78_reg_725");
    sc_trace(mVcdFile, tmp_78_reg_725_pp1_iter2_reg, "tmp_78_reg_725_pp1_iter2_reg");
    sc_trace(mVcdFile, i6_reg_157, "i6_reg_157");
    sc_trace(mVcdFile, inp_reg_168, "inp_reg_168");
    sc_trace(mVcdFile, i_reg_180, "i_reg_180");
    sc_trace(mVcdFile, inp_6_reg_201, "inp_6_reg_201");
    sc_trace(mVcdFile, tmp_s_fu_249_p2, "tmp_s_fu_249_p2");
    sc_trace(mVcdFile, tmp_s_reg_608, "tmp_s_reg_608");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_V_84_reg_612, "tmp_V_84_reg_612");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_V_86_reg_617, "tmp_V_86_reg_617");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_V_88_reg_623, "tmp_V_88_reg_623");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, tmp_V_92_reg_628, "tmp_V_92_reg_628");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, tmp4_fu_255_p2, "tmp4_fu_255_p2");
    sc_trace(mVcdFile, tmp4_reg_633, "tmp4_reg_633");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, tmp5_fu_259_p2, "tmp5_fu_259_p2");
    sc_trace(mVcdFile, tmp5_reg_638, "tmp5_reg_638");
    sc_trace(mVcdFile, tmp_68_fu_268_p2, "tmp_68_fu_268_p2");
    sc_trace(mVcdFile, tmp_68_reg_689, "tmp_68_reg_689");
    sc_trace(mVcdFile, KER_bound_fu_288_p2, "KER_bound_fu_288_p2");
    sc_trace(mVcdFile, KER_bound_reg_694, "KER_bound_reg_694");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_fu_292_p2, "exitcond_fu_292_p2");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter0, "ap_block_state10_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter1, "ap_block_state11_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_5_fu_297_p2, "i_5_fu_297_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond1_fu_303_p2, "exitcond1_fu_303_p2");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter0, "ap_block_state13_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op145_read_state14, "ap_predicate_op145_read_state14");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter1, "ap_block_state14_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter2, "ap_block_state15_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter3, "ap_block_state16_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_6_fu_308_p2, "i_6_fu_308_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_70_fu_321_p2, "tmp_70_fu_321_p2");
    sc_trace(mVcdFile, or_cond2_fu_365_p2, "or_cond2_fu_365_p2");
    sc_trace(mVcdFile, tmp_78_fu_442_p2, "tmp_78_fu_442_p2");
    sc_trace(mVcdFile, tmp_78_reg_725_pp1_iter1_reg, "tmp_78_reg_725_pp1_iter1_reg");
    sc_trace(mVcdFile, ox_load_1_reg_729, "ox_load_1_reg_729");
    sc_trace(mVcdFile, kx_load_reg_734, "kx_load_reg_734");
    sc_trace(mVcdFile, tmp_fu_460_p2, "tmp_fu_460_p2");
    sc_trace(mVcdFile, tmp_reg_739, "tmp_reg_739");
    sc_trace(mVcdFile, tmp_83_fu_472_p2, "tmp_83_fu_472_p2");
    sc_trace(mVcdFile, tmp_84_fu_489_p2, "tmp_84_fu_489_p2");
    sc_trace(mVcdFile, tmp_85_fu_509_p2, "tmp_85_fu_509_p2");
    sc_trace(mVcdFile, tmp_79_fu_588_p2, "tmp_79_fu_588_p2");
    sc_trace(mVcdFile, tmp_79_reg_757, "tmp_79_reg_757");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state10, "ap_condition_pp0_exit_iter0_state10");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state13, "ap_condition_pp1_exit_iter0_state13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, inputBuf_V_address0, "inputBuf_V_address0");
    sc_trace(mVcdFile, inputBuf_V_ce0, "inputBuf_V_ce0");
    sc_trace(mVcdFile, inputBuf_V_we0, "inputBuf_V_we0");
    sc_trace(mVcdFile, inputBuf_V_address1, "inputBuf_V_address1");
    sc_trace(mVcdFile, inputBuf_V_ce1, "inputBuf_V_ce1");
    sc_trace(mVcdFile, inputBuf_V_q1, "inputBuf_V_q1");
    sc_trace(mVcdFile, ap_phi_mux_inp_phi_fu_172_p4, "ap_phi_mux_inp_phi_fu_172_p4");
    sc_trace(mVcdFile, ap_phi_mux_inp_1_phi_fu_194_p4, "ap_phi_mux_inp_1_phi_fu_194_p4");
    sc_trace(mVcdFile, inp_2_fu_377_p2, "inp_2_fu_377_p2");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_inp_1_reg_191, "ap_phi_reg_pp1_iter0_inp_1_reg_191");
    sc_trace(mVcdFile, p_inp_1_fu_535_p3, "p_inp_1_fu_535_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_inp_6_reg_201, "ap_phi_reg_pp1_iter0_inp_6_reg_201");
    sc_trace(mVcdFile, ap_phi_mux_storemerge_phi_fu_226_p4, "ap_phi_mux_storemerge_phi_fu_226_p4");
    sc_trace(mVcdFile, tmp_82_fu_557_p1, "tmp_82_fu_557_p1");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_storemerge_reg_222, "ap_phi_reg_pp1_iter1_storemerge_reg_222");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_storemerge_reg_222, "ap_phi_reg_pp1_iter0_storemerge_reg_222");
    sc_trace(mVcdFile, tmp_75_fu_562_p1, "tmp_75_fu_562_p1");
    sc_trace(mVcdFile, tmp_80_fu_593_p1, "tmp_80_fu_593_p1");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, inElem_V_fu_597_p1, "inElem_V_fu_597_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, IFMPadDimSqrt_fu_88, "IFMPadDimSqrt_fu_88");
    sc_trace(mVcdFile, oy_fu_96, "oy_fu_96");
    sc_trace(mVcdFile, p_2_fu_544_p3, "p_2_fu_544_p3");
    sc_trace(mVcdFile, ox_fu_100, "ox_fu_100");
    sc_trace(mVcdFile, ox_1_fu_503_p2, "ox_1_fu_503_p2");
    sc_trace(mVcdFile, ky_fu_104, "ky_fu_104");
    sc_trace(mVcdFile, ky_1_fu_483_p2, "ky_1_fu_483_p2");
    sc_trace(mVcdFile, inp_j_fu_108, "inp_j_fu_108");
    sc_trace(mVcdFile, inp_j_1_fu_424_p3, "inp_j_1_fu_424_p3");
    sc_trace(mVcdFile, inp_i_fu_112, "inp_i_fu_112");
    sc_trace(mVcdFile, inp_i_2_fu_416_p3, "inp_i_2_fu_416_p3");
    sc_trace(mVcdFile, kx_fu_116, "kx_fu_116");
    sc_trace(mVcdFile, kx_1_fu_466_p2, "kx_1_fu_466_p2");
    sc_trace(mVcdFile, extLd_fu_317_p1, "extLd_fu_317_p1");
    sc_trace(mVcdFile, tmp_72_fu_333_p2, "tmp_72_fu_333_p2");
    sc_trace(mVcdFile, tmp_73_fu_347_p2, "tmp_73_fu_347_p2");
    sc_trace(mVcdFile, tmp_74_fu_353_p2, "tmp_74_fu_353_p2");
    sc_trace(mVcdFile, tmp1_fu_359_p2, "tmp1_fu_359_p2");
    sc_trace(mVcdFile, tmp_81_fu_339_p3, "tmp_81_fu_339_p3");
    sc_trace(mVcdFile, inp_j_2_fu_384_p2, "inp_j_2_fu_384_p2");
    sc_trace(mVcdFile, inp_i_1_fu_396_p2, "inp_i_1_fu_396_p2");
    sc_trace(mVcdFile, tmp_77_fu_402_p2, "tmp_77_fu_402_p2");
    sc_trace(mVcdFile, tmp_76_fu_390_p2, "tmp_76_fu_390_p2");
    sc_trace(mVcdFile, p_s_fu_408_p3, "p_s_fu_408_p3");
    sc_trace(mVcdFile, oy_1_fu_523_p2, "oy_1_fu_523_p2");
    sc_trace(mVcdFile, tmp_86_fu_529_p2, "tmp_86_fu_529_p2");
    sc_trace(mVcdFile, tmp_89_fu_567_p2, "tmp_89_fu_567_p2");
    sc_trace(mVcdFile, tmp_90_fu_572_p2, "tmp_90_fu_572_p2");
    sc_trace(mVcdFile, tmp2_fu_577_p2, "tmp2_fu_577_p2");
    sc_trace(mVcdFile, tmp3_fu_583_p2, "tmp3_fu_583_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0, "ap_block_pp0");
    sc_trace(mVcdFile, ap_block_pp1, "ap_block_pp1");
    sc_trace(mVcdFile, ap_predicate_op151_store_state14, "ap_predicate_op151_store_state14");
    sc_trace(mVcdFile, ap_enable_operation_151, "ap_enable_operation_151");
    sc_trace(mVcdFile, ap_enable_state14_pp1_iter1_stage0, "ap_enable_state14_pp1_iter1_stage0");
    sc_trace(mVcdFile, ap_enable_operation_159, "ap_enable_operation_159");
    sc_trace(mVcdFile, ap_enable_state15_pp1_iter2_stage0, "ap_enable_state15_pp1_iter2_stage0");
    sc_trace(mVcdFile, ap_enable_operation_160, "ap_enable_operation_160");
    sc_trace(mVcdFile, ap_enable_state16_pp1_iter3_stage0, "ap_enable_state16_pp1_iter3_stage0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_437, "ap_condition_437");
    sc_trace(mVcdFile, ap_condition_393, "ap_condition_393");
    sc_trace(mVcdFile, ap_condition_250, "ap_condition_250");
#endif

    }
}

SCIG_1::~SCIG_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inputBuf_V_U;
}

void SCIG_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state10.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state13.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
            ap_enable_reg_pp1_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_250.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_393.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter1_storemerge_reg_222 = ap_const_lv8_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter1_storemerge_reg_222 = ap_phi_reg_pp1_iter0_storemerge_reg_222.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_292_p2.read()))) {
        i6_reg_157 = i_5_fu_297_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i6_reg_157 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()))) {
        i_reg_180 = i_6_fu_308_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        i_reg_180 = ap_const_lv32_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_78_fu_442_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_83_fu_472_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_489_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_85_fu_509_p2.read())))) {
        inp_6_reg_201 = ap_phi_mux_inp_1_phi_fu_194_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_85_fu_509_p2.read()))) {
        inp_6_reg_201 = p_inp_1_fu_535_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        inp_6_reg_201 = ap_phi_reg_pp1_iter0_inp_6_reg_201.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_321_p2.read()))) {
        inp_i_fu_112 = inp_i_2_fu_416_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        inp_i_fu_112 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_321_p2.read()))) {
        inp_j_fu_108 = inp_j_1_fu_424_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        inp_j_fu_108 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        inp_reg_168 = inp_6_reg_201.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        inp_reg_168 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_83_fu_472_p2.read()))) {
        kx_fu_116 = kx_1_fu_466_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_85_fu_509_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_489_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_85_fu_509_p2.read())))) {
        kx_fu_116 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_489_p2.read()))) {
        ky_fu_104 = ky_1_fu_483_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read())))) {
        ky_fu_104 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_85_fu_509_p2.read()))) {
        ox_fu_100 = ox_1_fu_503_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_85_fu_509_p2.read())))) {
        ox_fu_100 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_83_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_489_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_85_fu_509_p2.read()))) {
        oy_fu_96 = p_2_fu_544_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        oy_fu_96 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        KER_bound_reg_694 = KER_bound_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond1_reg_708 = exitcond1_fu_303_p2.read();
        tmp_78_reg_725_pp1_iter1_reg = tmp_78_reg_725.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_699 = exitcond_fu_292_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_fu_442_p2.read()))) {
        kx_load_reg_734 = kx_fu_116.read();
        ox_load_1_reg_729 = ox_fu_100.read();
        tmp_reg_739 = tmp_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_321_p2.read()))) {
        or_cond2_reg_721 = or_cond2_fu_365_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_608.read()))) {
        tmp4_reg_633 = tmp4_fu_255_p2.read();
        tmp5_reg_638 = tmp5_fu_259_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
        tmp_68_reg_689 = tmp_68_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()))) {
        tmp_70_reg_717 = tmp_70_fu_321_p2.read();
        tmp_78_reg_725 = tmp_78_fu_442_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_78_reg_725_pp1_iter2_reg = tmp_78_reg_725_pp1_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725.read()))) {
        tmp_79_reg_757 = tmp_79_fu_588_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
        tmp_V_84_reg_612 = in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
        tmp_V_86_reg_617 = in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
        tmp_V_88_reg_623 = in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
        tmp_V_92_reg_628 = in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
        tmp_s_reg_608 = tmp_s_fu_249_p2.read();
    }
}

void SCIG_1::thread_IFMPadDimSqrt_fu_88() {
    IFMPadDimSqrt_fu_88 = ap_const_lv11_310;
}

void SCIG_1::thread_KER_bound_fu_288_p2() {
    KER_bound_fu_288_p2 = (!tmp5_reg_638.read().is_01() || !tmp4_reg_633.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp5_reg_638.read()) * sc_bigint<32>(tmp4_reg_633.read());
}

void SCIG_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[9];
}

void SCIG_1::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[11];
}

void SCIG_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void SCIG_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void SCIG_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void SCIG_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void SCIG_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void SCIG_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void SCIG_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void SCIG_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void SCIG_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void SCIG_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void SCIG_1::thread_ap_block_pp0() {
    ap_block_pp0 = (esl_seteq<1,13,13>(ap_ST_fsm_pp0_stage0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage0_subdone.read()));
}

void SCIG_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void SCIG_1::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))));
}

void SCIG_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))));
}

void SCIG_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))));
}

void SCIG_1::thread_ap_block_pp1() {
    ap_block_pp1 = (esl_seteq<1,13,13>(ap_ST_fsm_pp1_stage0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp1_stage0_subdone.read()));
}

void SCIG_1::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void SCIG_1::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op145_read_state14.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void SCIG_1::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op145_read_state14.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void SCIG_1::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op145_read_state14.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void SCIG_1::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state10_pp0_stage0_iter0() {
    ap_block_state10_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void SCIG_1::thread_ap_block_state11_pp0_stage0_iter1() {
    ap_block_state11_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void SCIG_1::thread_ap_block_state13_pp1_stage0_iter0() {
    ap_block_state13_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void SCIG_1::thread_ap_block_state14_pp1_stage0_iter1() {
    ap_block_state14_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op145_read_state14.read()));
}

void SCIG_1::thread_ap_block_state15_pp1_stage0_iter2() {
    ap_block_state15_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void SCIG_1::thread_ap_block_state16_pp1_stage0_iter3() {
    ap_block_state16_pp1_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void SCIG_1::thread_ap_condition_250() {
    ap_condition_250 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()));
}

void SCIG_1::thread_ap_condition_393() {
    ap_condition_393 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_321_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond2_fu_365_p2.read()));
}

void SCIG_1::thread_ap_condition_437() {
    ap_condition_437 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_303_p2.read()));
}

void SCIG_1::thread_ap_condition_pp0_exit_iter0_state10() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_292_p2.read())) {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_0;
    }
}

void SCIG_1::thread_ap_condition_pp1_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_303_p2.read())) {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_0;
    }
}

void SCIG_1::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void SCIG_1::thread_ap_enable_operation_151() {
    ap_enable_operation_151 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op151_store_state14.read());
}

void SCIG_1::thread_ap_enable_operation_159() {
    ap_enable_operation_159 = esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter1_reg.read());
}

void SCIG_1::thread_ap_enable_operation_160() {
    ap_enable_operation_160 = esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read());
}

void SCIG_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void SCIG_1::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void SCIG_1::thread_ap_enable_state14_pp1_iter1_stage0() {
    ap_enable_state14_pp1_iter1_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage0.read(), ap_const_logic_1));
}

void SCIG_1::thread_ap_enable_state15_pp1_iter2_stage0() {
    ap_enable_state15_pp1_iter2_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_1));
}

void SCIG_1::thread_ap_enable_state16_pp1_iter3_stage0() {
    ap_enable_state16_pp1_iter3_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_1));
}

void SCIG_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SCIG_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void SCIG_1::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void SCIG_1::thread_ap_phi_mux_inp_1_phi_fu_194_p4() {
    if (esl_seteq<1,1,1>(ap_condition_437.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_321_p2.read())) {
            ap_phi_mux_inp_1_phi_fu_194_p4 = ap_phi_mux_inp_phi_fu_172_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_321_p2.read())) {
            ap_phi_mux_inp_1_phi_fu_194_p4 = inp_2_fu_377_p2.read();
        } else {
            ap_phi_mux_inp_1_phi_fu_194_p4 = ap_phi_reg_pp1_iter0_inp_1_reg_191.read();
        }
    } else {
        ap_phi_mux_inp_1_phi_fu_194_p4 = ap_phi_reg_pp1_iter0_inp_1_reg_191.read();
    }
}

void SCIG_1::thread_ap_phi_mux_inp_phi_fu_172_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0))) {
        ap_phi_mux_inp_phi_fu_172_p4 = inp_6_reg_201.read();
    } else {
        ap_phi_mux_inp_phi_fu_172_p4 = inp_reg_168.read();
    }
}

void SCIG_1::thread_ap_phi_mux_storemerge_phi_fu_226_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_70_reg_717.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_721.read()))) {
        ap_phi_mux_storemerge_phi_fu_226_p4 = tmp_82_fu_557_p1.read();
    } else {
        ap_phi_mux_storemerge_phi_fu_226_p4 = ap_phi_reg_pp1_iter1_storemerge_reg_222.read();
    }
}

void SCIG_1::thread_ap_phi_reg_pp1_iter0_inp_1_reg_191() {
    ap_phi_reg_pp1_iter0_inp_1_reg_191 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
}

void SCIG_1::thread_ap_phi_reg_pp1_iter0_inp_6_reg_201() {
    ap_phi_reg_pp1_iter0_inp_6_reg_201 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
}

void SCIG_1::thread_ap_phi_reg_pp1_iter0_storemerge_reg_222() {
    ap_phi_reg_pp1_iter0_storemerge_reg_222 =  (sc_lv<8>) ("XXXXXXXX");
}

void SCIG_1::thread_ap_predicate_op145_read_state14() {
    ap_predicate_op145_read_state14 = (esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_70_reg_717.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_721.read()));
}

void SCIG_1::thread_ap_predicate_op151_store_state14() {
    ap_predicate_op151_store_state14 = (esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_70_reg_717.read(), ap_const_lv1_1));
}

void SCIG_1::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void SCIG_1::thread_exitcond1_fu_303_p2() {
    exitcond1_fu_303_p2 = (!i_reg_180.read().is_01() || !tmp_68_reg_689.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_180.read() == tmp_68_reg_689.read());
}

void SCIG_1::thread_exitcond_fu_292_p2() {
    exitcond_fu_292_p2 = (!i6_reg_157.read().is_01() || !KER_bound_reg_694.read().is_01())? sc_lv<1>(): sc_lv<1>(i6_reg_157.read() == KER_bound_reg_694.read());
}

void SCIG_1::thread_extLd_fu_317_p1() {
    extLd_fu_317_p1 = esl_sext<32,11>(IFMPadDimSqrt_fu_88.read());
}

void SCIG_1::thread_i_5_fu_297_p2() {
    i_5_fu_297_p2 = (!i6_reg_157.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i6_reg_157.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_i_6_fu_308_p2() {
    i_6_fu_308_p2 = (!i_reg_180.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_180.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_inElem_V_fu_597_p1() {
    inElem_V_fu_597_p1 = esl_sext<32,8>(inputBuf_V_q1.read());
}

void SCIG_1::thread_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_70_reg_717.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_reg_721.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read())))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void SCIG_1::thread_in_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op145_read_state14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void SCIG_1::thread_inp_2_fu_377_p2() {
    inp_2_fu_377_p2 = (!ap_phi_mux_inp_phi_fu_172_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_inp_phi_fu_172_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_inp_i_1_fu_396_p2() {
    inp_i_1_fu_396_p2 = (!inp_i_fu_112.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(inp_i_fu_112.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_inp_i_2_fu_416_p3() {
    inp_i_2_fu_416_p3 = (!tmp_76_fu_390_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_76_fu_390_p2.read()[0].to_bool())? p_s_fu_408_p3.read(): inp_i_fu_112.read());
}

void SCIG_1::thread_inp_j_1_fu_424_p3() {
    inp_j_1_fu_424_p3 = (!tmp_76_fu_390_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_76_fu_390_p2.read()[0].to_bool())? ap_const_lv32_0: inp_j_2_fu_384_p2.read());
}

void SCIG_1::thread_inp_j_2_fu_384_p2() {
    inp_j_2_fu_384_p2 = (!inp_j_fu_108.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(inp_j_fu_108.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_inputBuf_V_address0() {
    inputBuf_V_address0 =  (sc_lv<14>) (tmp_75_fu_562_p1.read());
}

void SCIG_1::thread_inputBuf_V_address1() {
    inputBuf_V_address1 =  (sc_lv<14>) (tmp_80_fu_593_p1.read());
}

void SCIG_1::thread_inputBuf_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_V_ce0 = ap_const_logic_1;
    } else {
        inputBuf_V_ce0 = ap_const_logic_0;
    }
}

void SCIG_1::thread_inputBuf_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        inputBuf_V_ce1 = ap_const_logic_1;
    } else {
        inputBuf_V_ce1 = ap_const_logic_0;
    }
}

void SCIG_1::thread_inputBuf_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_708.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_70_reg_717.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_V_we0 = ap_const_logic_1;
    } else {
        inputBuf_V_we0 = ap_const_logic_0;
    }
}

void SCIG_1::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void SCIG_1::thread_kx_1_fu_466_p2() {
    kx_1_fu_466_p2 = (!ap_const_lv32_1.is_01() || !kx_fu_116.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(kx_fu_116.read()));
}

void SCIG_1::thread_ky_1_fu_483_p2() {
    ky_1_fu_483_p2 = (!ky_fu_104.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ky_fu_104.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_or_cond2_fu_365_p2() {
    or_cond2_fu_365_p2 = (tmp1_fu_359_p2.read() | tmp_81_fu_339_p3.read());
}

void SCIG_1::thread_out_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read())))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void SCIG_1::thread_out_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_V_din = inElem_V_fu_597_p1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        out_V_V_din = in_V_V_dout.read();
    } else {
        out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void SCIG_1::thread_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_699.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_78_reg_725_pp1_iter2_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void SCIG_1::thread_ox_1_fu_503_p2() {
    ox_1_fu_503_p2 = (!ox_fu_100.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ox_fu_100.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_oy_1_fu_523_p2() {
    oy_1_fu_523_p2 = (!oy_fu_96.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(oy_fu_96.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void SCIG_1::thread_p_2_fu_544_p3() {
    p_2_fu_544_p3 = (!tmp_86_fu_529_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_86_fu_529_p2.read()[0].to_bool())? ap_const_lv32_0: oy_1_fu_523_p2.read());
}

void SCIG_1::thread_p_inp_1_fu_535_p3() {
    p_inp_1_fu_535_p3 = (!tmp_86_fu_529_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_86_fu_529_p2.read()[0].to_bool())? ap_const_lv32_0: ap_phi_mux_inp_1_phi_fu_194_p4.read());
}

void SCIG_1::thread_p_s_fu_408_p3() {
    p_s_fu_408_p3 = (!tmp_77_fu_402_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_77_fu_402_p2.read()[0].to_bool())? ap_const_lv32_0: inp_i_1_fu_396_p2.read());
}

void SCIG_1::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void SCIG_1::thread_start_out() {
    start_out = real_start.read();
}

void SCIG_1::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void SCIG_1::thread_tmp1_fu_359_p2() {
    tmp1_fu_359_p2 = (tmp_73_fu_347_p2.read() | tmp_74_fu_353_p2.read());
}

void SCIG_1::thread_tmp2_fu_577_p2() {
    tmp2_fu_577_p2 = (!tmp_89_fu_567_p2.read().is_01() || !tmp_90_fu_572_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_89_fu_567_p2.read()) - sc_biguint<32>(tmp_90_fu_572_p2.read()));
}

void SCIG_1::thread_tmp3_fu_583_p2() {
    tmp3_fu_583_p2 = (!kx_load_reg_734.read().is_01() || !tmp2_fu_577_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(kx_load_reg_734.read()) + sc_biguint<32>(tmp2_fu_577_p2.read()));
}

void SCIG_1::thread_tmp4_fu_255_p2() {
    tmp4_fu_255_p2 = (!tmp_V_86_reg_617.read().is_01() || !tmp_V_86_reg_617.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_V_86_reg_617.read()) * sc_bigint<32>(tmp_V_86_reg_617.read());
}

void SCIG_1::thread_tmp5_fu_259_p2() {
    tmp5_fu_259_p2 = (!tmp_V_88_reg_623.read().is_01() || !tmp_V_92_reg_628.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_V_88_reg_623.read()) * sc_bigint<32>(tmp_V_92_reg_628.read());
}

void SCIG_1::thread_tmp_68_fu_268_p2() {
    tmp_68_fu_268_p2 = (!tmp_V_84_reg_612.read().is_01() || !ap_const_lv32_38E8.is_01())? sc_lv<32>(): sc_bigint<32>(tmp_V_84_reg_612.read()) * sc_biguint<32>(ap_const_lv32_38E8);
}

void SCIG_1::thread_tmp_70_fu_321_p2() {
    tmp_70_fu_321_p2 = (!ap_phi_mux_inp_phi_fu_172_p4.read().is_01() || !extLd_fu_317_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ap_phi_mux_inp_phi_fu_172_p4.read()) < sc_biguint<32>(extLd_fu_317_p1.read()));
}

void SCIG_1::thread_tmp_72_fu_333_p2() {
    tmp_72_fu_333_p2 = (inp_j_fu_108.read() | inp_i_fu_112.read());
}

void SCIG_1::thread_tmp_73_fu_347_p2() {
    tmp_73_fu_347_p2 = (!inp_i_fu_112.read().is_01() || !ap_const_lv32_1B.is_01())? sc_lv<1>(): (sc_biguint<32>(inp_i_fu_112.read()) > sc_biguint<32>(ap_const_lv32_1B));
}

void SCIG_1::thread_tmp_74_fu_353_p2() {
    tmp_74_fu_353_p2 = (!inp_j_fu_108.read().is_01() || !ap_const_lv32_1B.is_01())? sc_lv<1>(): (sc_biguint<32>(inp_j_fu_108.read()) > sc_biguint<32>(ap_const_lv32_1B));
}

void SCIG_1::thread_tmp_75_fu_562_p1() {
    tmp_75_fu_562_p1 = esl_zext<64,32>(inp_reg_168.read());
}

void SCIG_1::thread_tmp_76_fu_390_p2() {
    tmp_76_fu_390_p2 = (!inp_j_2_fu_384_p2.read().is_01() || !ap_const_lv32_1C.is_01())? sc_lv<1>(): sc_lv<1>(inp_j_2_fu_384_p2.read() == ap_const_lv32_1C);
}

void SCIG_1::thread_tmp_77_fu_402_p2() {
    tmp_77_fu_402_p2 = (!inp_i_1_fu_396_p2.read().is_01() || !ap_const_lv32_1C.is_01())? sc_lv<1>(): sc_lv<1>(inp_i_1_fu_396_p2.read() == ap_const_lv32_1C);
}

void SCIG_1::thread_tmp_78_fu_442_p2() {
    tmp_78_fu_442_p2 = (!ap_phi_mux_inp_1_phi_fu_194_p4.read().is_01() || !ap_const_lv32_A8.is_01())? sc_lv<1>(): (sc_biguint<32>(ap_phi_mux_inp_1_phi_fu_194_p4.read()) > sc_biguint<32>(ap_const_lv32_A8));
}

void SCIG_1::thread_tmp_79_fu_588_p2() {
    tmp_79_fu_588_p2 = (!tmp3_fu_583_p2.read().is_01() || !ox_load_1_reg_729.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_fu_583_p2.read()) + sc_biguint<32>(ox_load_1_reg_729.read()));
}

void SCIG_1::thread_tmp_80_fu_593_p1() {
    tmp_80_fu_593_p1 = esl_zext<64,32>(tmp_79_reg_757.read());
}

void SCIG_1::thread_tmp_81_fu_339_p3() {
    tmp_81_fu_339_p3 = tmp_72_fu_333_p2.read().range(31, 31);
}

void SCIG_1::thread_tmp_82_fu_557_p1() {
    tmp_82_fu_557_p1 = in_V_V_dout.read().range(8-1, 0);
}

void SCIG_1::thread_tmp_83_fu_472_p2() {
    tmp_83_fu_472_p2 = (!kx_1_fu_466_p2.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<1>(): sc_lv<1>(kx_1_fu_466_p2.read() == ap_const_lv32_5);
}

void SCIG_1::thread_tmp_84_fu_489_p2() {
    tmp_84_fu_489_p2 = (!ky_1_fu_483_p2.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<1>(): sc_lv<1>(ky_1_fu_483_p2.read() == ap_const_lv32_5);
}

void SCIG_1::thread_tmp_85_fu_509_p2() {
    tmp_85_fu_509_p2 = (!ox_1_fu_503_p2.read().is_01() || !ap_const_lv32_18.is_01())? sc_lv<1>(): sc_lv<1>(ox_1_fu_503_p2.read() == ap_const_lv32_18);
}

void SCIG_1::thread_tmp_86_fu_529_p2() {
    tmp_86_fu_529_p2 = (!oy_1_fu_523_p2.read().is_01() || !ap_const_lv32_18.is_01())? sc_lv<1>(): sc_lv<1>(oy_1_fu_523_p2.read() == ap_const_lv32_18);
}

void SCIG_1::thread_tmp_89_fu_567_p2() {
    tmp_89_fu_567_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): tmp_reg_739.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void SCIG_1::thread_tmp_90_fu_572_p2() {
    tmp_90_fu_572_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_reg_739.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void SCIG_1::thread_tmp_fu_460_p2() {
    tmp_fu_460_p2 = (!oy_fu_96.read().is_01() || !ky_fu_104.read().is_01())? sc_lv<32>(): (sc_biguint<32>(oy_fu_96.read()) + sc_biguint<32>(ky_fu_104.read()));
}

void SCIG_1::thread_tmp_s_fu_249_p2() {
    tmp_s_fu_249_p2 = (!in_V_V_dout.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V_V_dout.read() == ap_const_lv32_0);
}

void SCIG_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_608.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_608.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 512 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_292_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_292_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        case 2048 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_303_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_303_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}


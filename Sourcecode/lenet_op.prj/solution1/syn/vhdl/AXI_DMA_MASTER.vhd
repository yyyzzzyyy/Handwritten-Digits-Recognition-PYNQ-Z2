-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXI_DMA_MASTER is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_stream_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_V_V_empty_n : IN STD_LOGIC;
    in_stream_V_V_read : OUT STD_LOGIC;
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TLAST : OUT STD_LOGIC );
end;


architecture behav of AXI_DMA_MASTER is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_stream_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_V_data_V_1_vld_in : STD_LOGIC;
    signal out_stream_V_data_V_1_vld_out : STD_LOGIC;
    signal out_stream_V_data_V_1_ack_in : STD_LOGIC;
    signal out_stream_V_data_V_1_ack_out : STD_LOGIC;
    signal out_stream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_V_data_V_1_sel : STD_LOGIC;
    signal out_stream_V_data_V_1_load_A : STD_LOGIC;
    signal out_stream_V_data_V_1_load_B : STD_LOGIC;
    signal out_stream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_stream_V_last_1_data_in : STD_LOGIC;
    signal out_stream_V_last_1_data_out : STD_LOGIC;
    signal out_stream_V_last_1_vld_in : STD_LOGIC;
    signal out_stream_V_last_1_vld_out : STD_LOGIC;
    signal out_stream_V_last_1_ack_in : STD_LOGIC;
    signal out_stream_V_last_1_ack_out : STD_LOGIC;
    signal out_stream_V_last_1_payload_A : STD_LOGIC;
    signal out_stream_V_last_1_payload_B : STD_LOGIC;
    signal out_stream_V_last_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_last_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_V_last_1_sel : STD_LOGIC;
    signal out_stream_V_last_1_load_A : STD_LOGIC;
    signal out_stream_V_last_1_load_B : STD_LOGIC;
    signal out_stream_V_last_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_last_1_state_cmp_full : STD_LOGIC;
    signal in_stream_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond7_reg_264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_239 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal exitcond7_reg_264_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_reg_239_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_83 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state20_io : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal reg_99 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_211_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_212_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_215_reg_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_119_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_fu_129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_124_fu_133_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal exitcond_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_last_1_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_1_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal OFM_bound_fu_154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal OFM_bound_reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_123_fu_158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal exitcond7_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_12_fu_168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_last_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_reg_273 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state12 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state18 : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal tmp6_fu_114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_119_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_124_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_state15 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (out_stream_V_last_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state12)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state18)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_data_V_1_ack_out = ap_const_logic_1) and (out_stream_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_data_V_1_sel_rd <= not(out_stream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_V_data_V_1_sel_wr <= not(out_stream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_data_V_1_state = ap_const_lv2_2) and (out_stream_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_V_data_V_1_vld_in = ap_const_logic_0) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_data_V_1_state = ap_const_lv2_1) and (out_stream_V_data_V_1_ack_out = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_V_data_V_1_ack_out = ap_const_logic_0) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_V_data_V_1_vld_in = ap_const_logic_0) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_stream_V_data_V_1_ack_out = ap_const_logic_0) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1))) and (out_stream_V_data_V_1_state = ap_const_lv2_3)) or ((out_stream_V_data_V_1_state = ap_const_lv2_1) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1)) or ((out_stream_V_data_V_1_state = ap_const_lv2_2) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_last_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_last_1_ack_out = ap_const_logic_1) and (out_stream_V_last_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_last_1_sel_rd <= not(out_stream_V_last_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_last_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_V_last_1_ack_in = ap_const_logic_1) and (out_stream_V_last_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_V_last_1_sel_wr <= not(out_stream_V_last_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_stream_V_last_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_last_1_state = ap_const_lv2_2) and (out_stream_V_last_1_vld_in = ap_const_logic_0)) or ((out_stream_V_last_1_state = ap_const_lv2_3) and (out_stream_V_last_1_vld_in = ap_const_logic_0) and (out_stream_V_last_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_last_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_last_1_state = ap_const_lv2_1) and (out_stream_V_last_1_ack_out = ap_const_logic_0)) or ((out_stream_V_last_1_state = ap_const_lv2_3) and (out_stream_V_last_1_ack_out = ap_const_logic_0) and (out_stream_V_last_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_last_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_V_last_1_vld_in = ap_const_logic_0) and (out_stream_V_last_1_ack_out = ap_const_logic_1))) and not(((out_stream_V_last_1_ack_out = ap_const_logic_0) and (out_stream_V_last_1_vld_in = ap_const_logic_1))) and (out_stream_V_last_1_state = ap_const_lv2_3)) or ((out_stream_V_last_1_state = ap_const_lv2_1) and (out_stream_V_last_1_ack_out = ap_const_logic_1)) or ((out_stream_V_last_1_state = ap_const_lv2_2) and (out_stream_V_last_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_last_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_last_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_138_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i1_reg_72 <= i_2_fu_143_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i1_reg_72 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_83_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_reg_83 <= i_12_fu_168_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i_reg_83 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                KER_bound_reg_228 <= KER_bound_fu_129_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                OFM_bound_reg_253 <= OFM_bound_fu_154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond7_reg_264 <= exitcond7_fu_163_p2;
                exitcond7_reg_264_pp1_iter1_reg <= exitcond7_reg_264;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_239 <= exitcond_fu_138_p2;
                exitcond_reg_239_pp0_iter1_reg <= exitcond_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_data_V_1_load_A = ap_const_logic_1)) then
                out_stream_V_data_V_1_payload_A <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_data_V_1_load_B = ap_const_logic_1)) then
                out_stream_V_data_V_1_payload_B <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_last_1_load_A = ap_const_logic_1)) then
                out_stream_V_last_1_payload_A <= out_stream_V_last_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_last_1_load_B = ap_const_logic_1)) then
                out_stream_V_last_1_payload_B <= out_stream_V_last_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                reg_94 <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_99 <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_179 = ap_const_lv1_1) and (out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp2_reg_218 <= tmp2_fu_119_p2;
                tmp3_reg_223 <= tmp3_fu_124_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_179 = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp5_reg_208 <= tmp5_fu_110_p2;
                tmp6_reg_213 <= tmp6_fu_114_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                tmp_123_reg_259 <= tmp_123_fu_158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_124_reg_234 <= tmp_124_fu_133_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_211_reg_183 <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_V_212_reg_190 <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                tmp_V_215_reg_196 <= in_stream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_138_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_last_1_reg_248 <= tmp_last_1_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_163_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_last_reg_273 <= tmp_last_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_s_reg_179 <= tmp_s_fu_104_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_stream_V_V_empty_n, out_stream_V_data_V_1_ack_in, out_stream_V_last_1_ack_in, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_enable_reg_pp1_iter1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, ap_enable_reg_pp0_iter2, tmp_s_reg_179, exitcond_fu_138_p2, ap_enable_reg_pp0_iter0, exitcond7_fu_163_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_CS_fsm_state15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((tmp_s_reg_179 = ap_const_lv1_1) and (out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((tmp_s_reg_179 = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_138_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((exitcond_fu_138_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (out_stream_V_last_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((exitcond7_fu_163_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((exitcond7_fu_163_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    KER_bound_fu_129_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp6_reg_213) * signed(tmp5_reg_208))), 32));
    OFM_bound_fu_154_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp3_reg_223) * signed(tmp2_reg_218))), 32));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_239)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_reg_239 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_239, ap_enable_reg_pp0_iter2, ap_block_state13_io, ap_block_state14_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state14_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((exitcond_reg_239 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_239, ap_enable_reg_pp0_iter2, ap_block_state13_io, ap_block_state14_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state14_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((exitcond_reg_239 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0)))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp1_iter1, exitcond7_reg_264)
    begin
                ap_block_pp1_stage0_01001 <= ((exitcond7_reg_264 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_enable_reg_pp1_iter2, ap_block_state19_io, ap_block_state20_io)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state20_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((exitcond7_reg_264 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(in_stream_V_V_empty_n, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_enable_reg_pp1_iter2, ap_block_state19_io, ap_block_state20_io)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state20_io) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((exitcond7_reg_264 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, in_stream_V_V_empty_n)
    begin
                ap_block_state1 <= ((in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state12_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(out_stream_V_data_V_1_ack_in, exitcond_reg_239)
    begin
                ap_block_state13_io <= ((exitcond_reg_239 = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage0_iter1_assign_proc : process(in_stream_V_V_empty_n, exitcond_reg_239)
    begin
                ap_block_state13_pp0_stage0_iter1 <= ((exitcond_reg_239 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state14_io_assign_proc : process(out_stream_V_data_V_1_ack_in, exitcond_reg_239_pp0_iter1_reg)
    begin
                ap_block_state14_io <= ((exitcond_reg_239_pp0_iter1_reg = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state14_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_assign_proc : process(out_stream_V_data_V_1_ack_in, out_stream_V_last_1_ack_in)
    begin
                ap_block_state15 <= ((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (out_stream_V_last_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state18_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_io_assign_proc : process(out_stream_V_data_V_1_ack_in, exitcond7_reg_264)
    begin
                ap_block_state19_io <= ((exitcond7_reg_264 = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state19_pp1_stage0_iter1_assign_proc : process(in_stream_V_V_empty_n, exitcond7_reg_264)
    begin
                ap_block_state19_pp1_stage0_iter1 <= ((exitcond7_reg_264 = ap_const_lv1_0) and (in_stream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state20_io_assign_proc : process(out_stream_V_data_V_1_ack_in, exitcond7_reg_264_pp1_iter1_reg)
    begin
                ap_block_state20_io <= ((exitcond7_reg_264_pp1_iter1_reg = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state20_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state12_assign_proc : process(exitcond_fu_138_p2)
    begin
        if ((exitcond_fu_138_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state18_assign_proc : process(exitcond7_fu_163_p2)
    begin
        if ((exitcond7_fu_163_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, out_stream_V_data_V_1_ack_in, out_stream_V_last_1_ack_in, ap_CS_fsm_state15)
    begin
        if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (out_stream_V_last_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(out_stream_V_data_V_1_ack_in, out_stream_V_last_1_ack_in, ap_CS_fsm_state15)
    begin
        if ((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (out_stream_V_last_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond7_fu_163_p2 <= "1" when (i_reg_83 = OFM_bound_reg_253) else "0";
    exitcond_fu_138_p2 <= "1" when (i1_reg_72 = KER_bound_reg_228) else "0";
    i_12_fu_168_p2 <= std_logic_vector(unsigned(i_reg_83) + unsigned(ap_const_lv32_1));
    i_2_fu_143_p2 <= std_logic_vector(unsigned(i1_reg_72) + unsigned(ap_const_lv32_1));

    in_stream_V_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_stream_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_239)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            in_stream_V_V_blk_n <= in_stream_V_V_empty_n;
        else 
            in_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_V_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_stream_V_V_empty_n, out_stream_V_data_V_1_ack_in, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_239, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if (((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_stream_V_V_read <= ap_const_logic_1;
        else 
            in_stream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_TDATA <= out_stream_V_data_V_1_data_out;

    out_stream_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_stream_V_data_V_1_state, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_239, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, exitcond7_reg_264_pp1_iter1_reg, ap_enable_reg_pp0_iter2, exitcond_reg_239_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            out_stream_TDATA_blk_n <= out_stream_V_data_V_1_state(1);
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TLAST <= out_stream_V_last_1_data_out;
    out_stream_TVALID <= out_stream_V_last_1_state(0);
    out_stream_V_data_V_1_ack_in <= out_stream_V_data_V_1_state(1);
    out_stream_V_data_V_1_ack_out <= out_stream_TREADY;

    out_stream_V_data_V_1_data_out_assign_proc : process(out_stream_V_data_V_1_payload_A, out_stream_V_data_V_1_payload_B, out_stream_V_data_V_1_sel)
    begin
        if ((out_stream_V_data_V_1_sel = ap_const_logic_1)) then 
            out_stream_V_data_V_1_data_out <= out_stream_V_data_V_1_payload_B;
        else 
            out_stream_V_data_V_1_data_out <= out_stream_V_data_V_1_payload_A;
        end if; 
    end process;

    out_stream_V_data_V_1_load_A <= (out_stream_V_data_V_1_state_cmp_full and not(out_stream_V_data_V_1_sel_wr));
    out_stream_V_data_V_1_load_B <= (out_stream_V_data_V_1_state_cmp_full and out_stream_V_data_V_1_sel_wr);
    out_stream_V_data_V_1_sel <= out_stream_V_data_V_1_sel_rd;
    out_stream_V_data_V_1_state_cmp_full <= '0' when (out_stream_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_stream_V_data_V_1_vld_in_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_stream_V_V_empty_n, out_stream_V_data_V_1_ack_in, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_239, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if (((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_stream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_data_V_1_vld_out <= out_stream_V_data_V_1_state(0);
    out_stream_V_last_1_ack_in <= out_stream_V_last_1_state(1);
    out_stream_V_last_1_ack_out <= out_stream_TREADY;

    out_stream_V_last_1_data_in_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_stream_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_239, tmp_last_1_reg_248, tmp_last_reg_273, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001)
    begin
        if (((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            out_stream_V_last_1_data_in <= tmp_last_reg_273(0);
        elsif (((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_stream_V_last_1_data_in <= tmp_last_1_reg_248(0);
        elsif (((not(((in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_stream_V_last_1_data_in <= ap_const_logic_0;
        else 
            out_stream_V_last_1_data_in <= 'X';
        end if; 
    end process;


    out_stream_V_last_1_data_out_assign_proc : process(out_stream_V_last_1_payload_A, out_stream_V_last_1_payload_B, out_stream_V_last_1_sel)
    begin
        if ((out_stream_V_last_1_sel = ap_const_logic_1)) then 
            out_stream_V_last_1_data_out <= out_stream_V_last_1_payload_B;
        else 
            out_stream_V_last_1_data_out <= out_stream_V_last_1_payload_A;
        end if; 
    end process;

    out_stream_V_last_1_load_A <= (out_stream_V_last_1_state_cmp_full and not(out_stream_V_last_1_sel_wr));
    out_stream_V_last_1_load_B <= (out_stream_V_last_1_state_cmp_full and out_stream_V_last_1_sel_wr);
    out_stream_V_last_1_sel <= out_stream_V_last_1_sel_rd;
    out_stream_V_last_1_state_cmp_full <= '0' when (out_stream_V_last_1_state = ap_const_lv2_1) else '1';

    out_stream_V_last_1_vld_in_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_stream_V_V_empty_n, out_stream_V_data_V_1_ack_in, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond7_reg_264, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_239, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if (((not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond_reg_239 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond7_reg_264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_stream_V_data_V_1_ack_in = ap_const_logic_0) or (in_stream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_stream_V_last_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_last_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_last_1_vld_out <= out_stream_V_last_1_state(0);
    tmp2_fu_119_p0 <= reg_94;
    tmp2_fu_119_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp2_fu_119_p0) * signed(tmp_V_215_reg_196))), 32));
    tmp3_fu_124_p0 <= reg_99;
    tmp3_fu_124_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp3_fu_124_p0) * signed(tmp_V_215_reg_196))), 32));
    tmp5_fu_110_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_211_reg_183) * signed(tmp_V_212_reg_190))), 32));
    tmp6_fu_114_p1 <= reg_99;
    tmp6_fu_114_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_211_reg_183) * signed(tmp6_fu_114_p1))), 32));
    tmp_123_fu_158_p2 <= std_logic_vector(unsigned(OFM_bound_reg_253) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_124_fu_133_p2 <= std_logic_vector(unsigned(KER_bound_reg_228) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_last_1_fu_149_p2 <= "1" when (i1_reg_72 = tmp_124_reg_234) else "0";
    tmp_last_fu_174_p2 <= "1" when (i_reg_83 = tmp_123_reg_259) else "0";
    tmp_s_fu_104_p2 <= "1" when (in_stream_V_V_dout = ap_const_lv32_0) else "0";
end behav;

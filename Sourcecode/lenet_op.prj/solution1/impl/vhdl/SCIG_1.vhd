-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SCIG_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of SCIG_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_310 : STD_LOGIC_VECTOR (10 downto 0) := "01100010000";
    constant ap_const_lv32_38E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011100011101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond1_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_721 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_699 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal tmp_78_reg_725 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_725_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i6_reg_157 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_reg_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_6_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_608 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_84_reg_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmp_V_86_reg_617 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal tmp_V_88_reg_623 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal tmp_V_92_reg_628 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal tmp4_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_633 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal tmp5_fu_259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_638 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_fu_288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_694 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state10_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_5_fu_297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond1_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state13_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op145_read_state14 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_6_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_70_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_725_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ox_load_1_reg_729 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_load_reg_734 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_739 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_reg_757 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state10 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal inputBuf_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal inputBuf_V_ce0 : STD_LOGIC;
    signal inputBuf_V_we0 : STD_LOGIC;
    signal inputBuf_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal inputBuf_V_ce1 : STD_LOGIC;
    signal inputBuf_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_inp_phi_fu_172_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp_1_phi_fu_194_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_2_fu_377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_inp_1_reg_191 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_inp_1_fu_535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_inp_6_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_226_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_fu_557_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_storemerge_reg_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_storemerge_reg_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal inElem_V_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal IFMPadDimSqrt_fu_88 : STD_LOGIC_VECTOR (10 downto 0);
    signal oy_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ox_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal ox_1_fu_503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ky_1_fu_483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_j_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_j_1_fu_424_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_i_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_i_2_fu_416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal kx_1_fu_466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd_fu_317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_339_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal inp_j_2_fu_384_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp_i_1_fu_396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_408_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal oy_1_fu_523_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_577_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_block_pp1 : BOOLEAN;
    signal ap_predicate_op151_store_state14 : BOOLEAN;
    signal ap_enable_operation_151 : BOOLEAN;
    signal ap_enable_state14_pp1_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_enable_state15_pp1_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_enable_state16_pp1_iter3_stage0 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_437 : BOOLEAN;
    signal ap_condition_393 : BOOLEAN;
    signal ap_condition_250 : BOOLEAN;

    component SCIG_1_inputBuf_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    inputBuf_V_U : component SCIG_1_inputBuf_V
    generic map (
        DataWidth => 8,
        AddressRange => 10500,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inputBuf_V_address0,
        ce0 => inputBuf_V_ce0,
        we0 => inputBuf_V_we0,
        d0 => ap_phi_mux_storemerge_phi_fu_226_p4,
        address1 => inputBuf_V_address1,
        ce1 => inputBuf_V_ce1,
        q1 => inputBuf_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state10);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state13);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_storemerge_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_250)) then
                if ((ap_const_boolean_1 = ap_condition_393)) then 
                    ap_phi_reg_pp1_iter1_storemerge_reg_222 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_storemerge_reg_222 <= ap_phi_reg_pp1_iter0_storemerge_reg_222;
                end if;
            end if; 
        end if;
    end process;

    i6_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_fu_292_p2 = ap_const_lv1_0))) then 
                i6_reg_157 <= i_5_fu_297_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i6_reg_157 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                i_reg_180 <= i_6_fu_308_p2;
            elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                i_reg_180 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    inp_6_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_78_fu_442_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_85_fu_509_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)))) then 
                inp_6_reg_201 <= ap_phi_mux_inp_1_phi_fu_194_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_85_fu_509_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                inp_6_reg_201 <= p_inp_1_fu_535_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                inp_6_reg_201 <= ap_phi_reg_pp1_iter0_inp_6_reg_201;
            end if; 
        end if;
    end process;

    inp_i_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_fu_321_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                inp_i_fu_112 <= inp_i_2_fu_416_p3;
            elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                inp_i_fu_112 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    inp_j_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_fu_321_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                inp_j_fu_108 <= inp_j_1_fu_424_p3;
            elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                inp_j_fu_108 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    inp_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond1_reg_708 = ap_const_lv1_0))) then 
                inp_reg_168 <= inp_6_reg_201;
            elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                inp_reg_168 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    kx_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                kx_fu_116 <= kx_1_fu_466_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_85_fu_509_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_85_fu_509_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1)))) then 
                kx_fu_116 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ky_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                ky_fu_104 <= ky_1_fu_483_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1)))) then 
                ky_fu_104 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ox_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (tmp_85_fu_509_p2 = ap_const_lv1_0) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                ox_fu_100 <= ox_1_fu_503_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_85_fu_509_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1)))) then 
                ox_fu_100 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    oy_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_85_fu_509_p2 = ap_const_lv1_1) and (tmp_84_fu_489_p2 = ap_const_lv1_1) and (tmp_83_fu_472_p2 = ap_const_lv1_1) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then 
                oy_fu_96 <= p_2_fu_544_p3;
            elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then 
                oy_fu_96 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                KER_bound_reg_694 <= KER_bound_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond1_reg_708 <= exitcond1_fu_303_p2;
                tmp_78_reg_725_pp1_iter1_reg <= tmp_78_reg_725;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_699 <= exitcond_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_78_fu_442_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then
                kx_load_reg_734 <= kx_fu_116;
                ox_load_1_reg_729 <= ox_fu_100;
                tmp_reg_739 <= tmp_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_fu_321_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then
                or_cond2_reg_721 <= or_cond2_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_0))) then
                tmp4_reg_633 <= tmp4_fu_255_p2;
                tmp5_reg_638 <= tmp5_fu_259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then
                    tmp_68_reg_689(31 downto 3) <= tmp_68_fu_268_p2(31 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond1_fu_303_p2 = ap_const_lv1_0))) then
                tmp_70_reg_717 <= tmp_70_fu_321_p2;
                tmp_78_reg_725 <= tmp_78_fu_442_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                tmp_78_reg_725_pp1_iter2_reg <= tmp_78_reg_725_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_78_reg_725 = ap_const_lv1_1))) then
                tmp_79_reg_757 <= tmp_79_fu_588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_84_reg_612 <= in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_86_reg_617 <= in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_V_88_reg_623 <= in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_V_92_reg_628 <= in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_s_reg_608 <= tmp_s_fu_249_p2;
            end if;
        end if;
    end process;
    tmp_68_reg_689(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_V_V_empty_n, out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, tmp_s_reg_608, exitcond_fu_292_p2, ap_enable_reg_pp0_iter0, exitcond1_fu_303_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_s_reg_608 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_292_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_292_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond1_fu_303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond1_fu_303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    IFMPadDimSqrt_fu_88 <= ap_const_lv11_310;
    KER_bound_fu_288_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp5_reg_638) * signed(tmp4_reg_633))), 32));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_const_boolean_1 = ap_block_pp0_stage0_subdone) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_699)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((out_V_V_full_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((in_V_V_empty_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_699)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((out_V_V_full_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((in_V_V_empty_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_699)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((out_V_V_full_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((in_V_V_empty_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0))));
    end process;


    ap_block_pp1_assign_proc : process(ap_CS_fsm, ap_block_pp1_stage0_subdone)
    begin
                ap_block_pp1 <= ((ap_const_boolean_1 = ap_block_pp1_stage0_subdone) and (ap_ST_fsm_pp1_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg, ap_predicate_op145_read_state14)
    begin
                ap_block_pp1_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op145_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg, ap_predicate_op145_read_state14)
    begin
                ap_block_pp1_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op145_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg, ap_predicate_op145_read_state14)
    begin
                ap_block_pp1_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op145_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, exitcond_reg_699)
    begin
                ap_block_state11_pp0_stage0_iter1 <= (((out_V_V_full_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((in_V_V_empty_n = ap_const_logic_0) and (exitcond_reg_699 = ap_const_lv1_0)));
    end process;

        ap_block_state13_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp1_stage0_iter1_assign_proc : process(in_V_V_empty_n, ap_predicate_op145_read_state14)
    begin
                ap_block_state14_pp1_stage0_iter1 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op145_read_state14 = ap_const_boolean_1));
    end process;

        ap_block_state15_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp1_stage0_iter3_assign_proc : process(out_V_V_full_n, tmp_78_reg_725_pp1_iter2_reg)
    begin
                ap_block_state16_pp1_stage0_iter3 <= ((out_V_V_full_n = ap_const_logic_0) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1));
    end process;


    ap_block_state2_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state2 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state3 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state4 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state5 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state6 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state7 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(in_V_V_empty_n, out_V_V_full_n)
    begin
                ap_block_state8 <= ((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_250_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_250 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_393_assign_proc : process(exitcond1_fu_303_p2, tmp_70_fu_321_p2, or_cond2_fu_365_p2)
    begin
                ap_condition_393 <= ((or_cond2_fu_365_p2 = ap_const_lv1_1) and (tmp_70_fu_321_p2 = ap_const_lv1_1) and (exitcond1_fu_303_p2 = ap_const_lv1_0));
    end process;


    ap_condition_437_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, exitcond1_fu_303_p2, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_437 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond1_fu_303_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state10_assign_proc : process(exitcond_fu_292_p2)
    begin
        if ((exitcond_fu_292_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state13_assign_proc : process(exitcond1_fu_303_p2)
    begin
        if ((exitcond1_fu_303_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_151_assign_proc : process(ap_predicate_op151_store_state14)
    begin
                ap_enable_operation_151 <= (ap_predicate_op151_store_state14 = ap_const_boolean_1);
    end process;


    ap_enable_operation_159_assign_proc : process(tmp_78_reg_725_pp1_iter1_reg)
    begin
                ap_enable_operation_159 <= (tmp_78_reg_725_pp1_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_160_assign_proc : process(tmp_78_reg_725_pp1_iter2_reg)
    begin
                ap_enable_operation_160 <= (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_enable_state14_pp1_iter1_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
                ap_enable_state14_pp1_iter1_stage0 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_enable_state15_pp1_iter2_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter2)
    begin
                ap_enable_state15_pp1_iter2_stage0 <= ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_enable_state16_pp1_iter3_stage0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter3)
    begin
                ap_enable_state16_pp1_iter3_stage0 <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_inp_1_phi_fu_194_p4_assign_proc : process(tmp_70_fu_321_p2, ap_phi_mux_inp_phi_fu_172_p4, inp_2_fu_377_p2, ap_phi_reg_pp1_iter0_inp_1_reg_191, ap_condition_437)
    begin
        if ((ap_const_boolean_1 = ap_condition_437)) then
            if ((tmp_70_fu_321_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_inp_1_phi_fu_194_p4 <= ap_phi_mux_inp_phi_fu_172_p4;
            elsif ((tmp_70_fu_321_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_inp_1_phi_fu_194_p4 <= inp_2_fu_377_p2;
            else 
                ap_phi_mux_inp_1_phi_fu_194_p4 <= ap_phi_reg_pp1_iter0_inp_1_reg_191;
            end if;
        else 
            ap_phi_mux_inp_1_phi_fu_194_p4 <= ap_phi_reg_pp1_iter0_inp_1_reg_191;
        end if; 
    end process;


    ap_phi_mux_inp_phi_fu_172_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_reg_708, inp_reg_168, inp_6_reg_201)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond1_reg_708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_inp_phi_fu_172_p4 <= inp_6_reg_201;
        else 
            ap_phi_mux_inp_phi_fu_172_p4 <= inp_reg_168;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_226_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_reg_708, tmp_70_reg_717, or_cond2_reg_721, tmp_82_fu_557_p1, ap_phi_reg_pp1_iter1_storemerge_reg_222)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_reg_717 = ap_const_lv1_1) and (or_cond2_reg_721 = ap_const_lv1_0) and (exitcond1_reg_708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_storemerge_phi_fu_226_p4 <= tmp_82_fu_557_p1;
        else 
            ap_phi_mux_storemerge_phi_fu_226_p4 <= ap_phi_reg_pp1_iter1_storemerge_reg_222;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_inp_1_reg_191 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_inp_6_reg_201 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_storemerge_reg_222 <= "XXXXXXXX";

    ap_predicate_op145_read_state14_assign_proc : process(exitcond1_reg_708, tmp_70_reg_717, or_cond2_reg_721)
    begin
                ap_predicate_op145_read_state14 <= ((tmp_70_reg_717 = ap_const_lv1_1) and (or_cond2_reg_721 = ap_const_lv1_0) and (exitcond1_reg_708 = ap_const_lv1_0));
    end process;


    ap_predicate_op151_store_state14_assign_proc : process(exitcond1_reg_708, tmp_70_reg_717)
    begin
                ap_predicate_op151_store_state14 <= ((tmp_70_reg_717 = ap_const_lv1_1) and (exitcond1_reg_708 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond1_fu_303_p2 <= "1" when (i_reg_180 = tmp_68_reg_689) else "0";
    exitcond_fu_292_p2 <= "1" when (i6_reg_157 = KER_bound_reg_694) else "0";
        extLd_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(IFMPadDimSqrt_fu_88),32));

    i_5_fu_297_p2 <= std_logic_vector(unsigned(i6_reg_157) + unsigned(ap_const_lv32_1));
    i_6_fu_308_p2 <= std_logic_vector(unsigned(i_reg_180) + unsigned(ap_const_lv32_1));
        inElem_V_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputBuf_V_q1),32));


    in_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_reg_708, tmp_70_reg_717, or_cond2_reg_721, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_699)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_reg_717 = ap_const_lv1_1) and (or_cond2_reg_721 = ap_const_lv1_0) and (exitcond1_reg_708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_V_empty_n, out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_699, ap_block_pp0_stage0_11001, ap_predicate_op145_read_state14, ap_block_pp1_stage0_11001)
    begin
        if (((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((ap_predicate_op145_read_state14 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    inp_2_fu_377_p2 <= std_logic_vector(unsigned(ap_phi_mux_inp_phi_fu_172_p4) + unsigned(ap_const_lv32_1));
    inp_i_1_fu_396_p2 <= std_logic_vector(unsigned(inp_i_fu_112) + unsigned(ap_const_lv32_1));
    inp_i_2_fu_416_p3 <= 
        p_s_fu_408_p3 when (tmp_76_fu_390_p2(0) = '1') else 
        inp_i_fu_112;
    inp_j_1_fu_424_p3 <= 
        ap_const_lv32_0 when (tmp_76_fu_390_p2(0) = '1') else 
        inp_j_2_fu_384_p2;
    inp_j_2_fu_384_p2 <= std_logic_vector(unsigned(inp_j_fu_108) + unsigned(ap_const_lv32_1));
    inputBuf_V_address0 <= tmp_75_fu_562_p1(14 - 1 downto 0);
    inputBuf_V_address1 <= tmp_80_fu_593_p1(14 - 1 downto 0);

    inputBuf_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            inputBuf_V_ce0 <= ap_const_logic_1;
        else 
            inputBuf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            inputBuf_V_ce1 <= ap_const_logic_1;
        else 
            inputBuf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond1_reg_708, tmp_70_reg_717, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_70_reg_717 = ap_const_lv1_1) and (exitcond1_reg_708 = ap_const_lv1_0))) then 
            inputBuf_V_we0 <= ap_const_logic_1;
        else 
            inputBuf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    kx_1_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(kx_fu_116));
    ky_1_fu_483_p2 <= std_logic_vector(unsigned(ky_fu_104) + unsigned(ap_const_lv32_1));
    or_cond2_fu_365_p2 <= (tmp_81_fu_339_p3 or tmp1_fu_359_p2);

    out_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_699, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_reg_699 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_V_dout, in_V_V_empty_n, out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_699, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg, ap_block_pp0_stage0_01001, inElem_V_fu_597_p1, ap_block_pp1_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1))) then 
            out_V_V_din <= inElem_V_fu_597_p1;
        elsif (((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_699 = ap_const_lv1_0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            out_V_V_din <= in_V_V_dout;
        else 
            out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_V_empty_n, out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_699, ap_enable_reg_pp1_iter3, tmp_78_reg_725_pp1_iter2_reg, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if (((not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_done_reg = ap_const_logic_1) or (out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (tmp_78_reg_725_pp1_iter2_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_699 = ap_const_lv1_0)) or (not(((out_V_V_full_n = ap_const_logic_0) or (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ox_1_fu_503_p2 <= std_logic_vector(unsigned(ox_fu_100) + unsigned(ap_const_lv32_1));
    oy_1_fu_523_p2 <= std_logic_vector(unsigned(oy_fu_96) + unsigned(ap_const_lv32_1));
    p_2_fu_544_p3 <= 
        ap_const_lv32_0 when (tmp_86_fu_529_p2(0) = '1') else 
        oy_1_fu_523_p2;
    p_inp_1_fu_535_p3 <= 
        ap_const_lv32_0 when (tmp_86_fu_529_p2(0) = '1') else 
        ap_phi_mux_inp_1_phi_fu_194_p4;
    p_s_fu_408_p3 <= 
        ap_const_lv32_0 when (tmp_77_fu_402_p2(0) = '1') else 
        inp_i_1_fu_396_p2;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_359_p2 <= (tmp_74_fu_353_p2 or tmp_73_fu_347_p2);
    tmp2_fu_577_p2 <= std_logic_vector(unsigned(tmp_89_fu_567_p2) - unsigned(tmp_90_fu_572_p2));
    tmp3_fu_583_p2 <= std_logic_vector(unsigned(kx_load_reg_734) + unsigned(tmp2_fu_577_p2));
    tmp4_fu_255_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_86_reg_617) * signed(tmp_V_86_reg_617))), 32));
    tmp5_fu_259_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_88_reg_623) * signed(tmp_V_92_reg_628))), 32));
    tmp_68_fu_268_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_84_reg_612) * signed('0' &ap_const_lv32_38E8))), 32));
    tmp_70_fu_321_p2 <= "1" when (unsigned(ap_phi_mux_inp_phi_fu_172_p4) < unsigned(extLd_fu_317_p1)) else "0";
    tmp_72_fu_333_p2 <= (inp_j_fu_108 or inp_i_fu_112);
    tmp_73_fu_347_p2 <= "1" when (unsigned(inp_i_fu_112) > unsigned(ap_const_lv32_1B)) else "0";
    tmp_74_fu_353_p2 <= "1" when (unsigned(inp_j_fu_108) > unsigned(ap_const_lv32_1B)) else "0";
    tmp_75_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inp_reg_168),64));
    tmp_76_fu_390_p2 <= "1" when (inp_j_2_fu_384_p2 = ap_const_lv32_1C) else "0";
    tmp_77_fu_402_p2 <= "1" when (inp_i_1_fu_396_p2 = ap_const_lv32_1C) else "0";
    tmp_78_fu_442_p2 <= "1" when (unsigned(ap_phi_mux_inp_1_phi_fu_194_p4) > unsigned(ap_const_lv32_A8)) else "0";
    tmp_79_fu_588_p2 <= std_logic_vector(unsigned(tmp3_fu_583_p2) + unsigned(ox_load_1_reg_729));
    tmp_80_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_reg_757),64));
    tmp_81_fu_339_p3 <= tmp_72_fu_333_p2(31 downto 31);
    tmp_82_fu_557_p1 <= in_V_V_dout(8 - 1 downto 0);
    tmp_83_fu_472_p2 <= "1" when (kx_1_fu_466_p2 = ap_const_lv32_5) else "0";
    tmp_84_fu_489_p2 <= "1" when (ky_1_fu_483_p2 = ap_const_lv32_5) else "0";
    tmp_85_fu_509_p2 <= "1" when (ox_1_fu_503_p2 = ap_const_lv32_18) else "0";
    tmp_86_fu_529_p2 <= "1" when (oy_1_fu_523_p2 = ap_const_lv32_18) else "0";
    tmp_89_fu_567_p2 <= std_logic_vector(shift_left(unsigned(tmp_reg_739),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    tmp_90_fu_572_p2 <= std_logic_vector(shift_left(unsigned(tmp_reg_739),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_fu_460_p2 <= std_logic_vector(unsigned(oy_fu_96) + unsigned(ky_fu_104));
    tmp_s_fu_249_p2 <= "1" when (in_V_V_dout = ap_const_lv32_0) else "0";
end behav;
